{
    "samples":   [
        "\/\/ Name: Peer Analysis\r\n\/\/ Description: Peer Analysis Example\r\n\/\/ Version: 2.0.0.0\r\n\/\/ Row: 0\r\ncom.industry.analytics.Analytic(\"Average\",[\"Orders\"],[\"Average\"],{})\r\n\r\n\/\/ Row: 1\r\ncom.industry.analytics.Analytic(\"Spread\",[\"Orders\",\"Average\"],[\"Row1:Channel1.0\"],{})\r\ncom.industry.analytics.Analytic(\"Threshold\",[\"Row1:Channel1.0\"],[\"Breaches\"],{\"threshold\":\"0.0d\"})"
        ,
        "\/\/ Name: Sensor Patterns\r\n\/\/ Version: 2.0.0.0\r\n\/\/ Row: 0\r\ncom.industry.analytics.Analytic(\"Spike\",[\"RAW_SENSOR_DATA\"],[\"SENSOR_ANOMALIES\",\"avg:SENSOR_AVG\",\"upper:SENSOR_UPPER\",\"lower:SENSOR_LOWER\"],{\"timeWindow\":\"0.0d\",\"standardDeviationMultiple\":\"0.0d\",\"verbose\":\"false\"})\r\n\r\n\/\/ Row: 1\r\ncom.industry.analytics.Analytic(\"Drift\",[\"RAW_SENSOR_DATA\"],[\"SENSOR_ANOMALIES\"],{})\r\n\r\n\/\/ Row: 2\r\ncom.industry.analytics.Analytic(\"MissingData\",[\"RAW_SENSOR_DATA\"],[\"SENSOR_ANOMALIES\"],{})\r\n\r\n\/\/ Row: 3\r\ncom.industry.analytics.Analytic(\"Volatility\",[\"RAW_SENSOR_DATA\"],[\"Row3:Channel1.0\"],{})\r\ncom.industry.analytics.Analytic(\"Threshold\",[\"Row3:Channel1.0\"],[\"SENSOR_ANOMALIES\"],{\"threshold\":\"25.0d\"})\r\n\r\n\/\/ Row: 4\r\ncom.industry.analytics.Analytic(\"Spike\",[\"RAW_SENSOR_DATA\"],[\"Row4:Channel1.0\"],{\"timeWindow\":\"0.0d\",\"standardDeviationMultiple\":\"0.0d\",\"verbose\":\"false\"})\r\ncom.industry.analytics.Analytic(\"MissingData\",[\"Row4:Channel1.0\"],[\"SENSOR_ANOMALIES\"],{})\r\n\r\n\/\/ Row: 5\r\ncom.industry.analytics.Analytic(\"Spike\",[\"RAW_SENSOR_DATA\"],[\"OUT1\",\"variance:OUT1\"],{\"timeWindow\":\"0.0d\",\"standardDeviationMultiple\":\"0.0d\",\"verbose\":\"false\"})\r\n\r\n\/\/ Row: 6\r\ncom.industry.analytics.Analytic(\"Suppressor\",[\"OUT1\"],[\"Suppressed\"],{\"triggerParam\":\"type\",\"triggerParamValue\":\"a\"})\r\n\r\n\/\/ Row: 7\r\ncom.industry.analytics.Analytic(\"Spread\",[\"Suppressed\",\"OUT1\"],[\"Row7:Channel1.0\"],{})\r\ncom.industry.analytics.Analytic(\"Threshold\",[\"Row7:Channel1.0\"],[\"SENSOR_ANOMALIES\"],{\"threshold\":\"25.0d\"})"
                 ],
    "analytics": [
        {
            "description": "Detect data outside of a defined corridor.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.detectors</FONT><BR>Corridor</H2><HR>The Corridor Analytic generates an anomaly Data if a threshold range is breached. The computation looks for data entering or exiting the corridor. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd>The stream will always provide the data to be compared to the threshold and is mandatory.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated.  All the <font face=\"courier\" size=\"-1\">params</font> from the breaching input Data are copied to the anomaly Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>upperThreshold</b></td><td>Defines the upper threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td><font face=\"courier\" size=\"-1\">0.0d</font></td></tr> <tr><td><b>lowerThreshold</b></td><td>Defines the lower threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td><font face=\"courier\" size=\"-1\">0.0d</font></td></tr> <tr><td><b>zone</b></td><td>Defines whether to check for data inside or outside the corridor</td> <td><font face=\"courier\" size=\"-1\">\"inside\"</font>, <font face=\"courier\" size=\"-1\">\"outside\"</font>. <b>Note:</b> These values are case-insensitive</td> <td>String</td><td>True</td><td></td></tr> <tr><td><b>duration</b></td><td>Defines how long (in seconds) the threshold may be breached before an Anomaly Data is generated. If a value of <font face=\"courier\" size=\"-1\"><=0.0d</font> is defined, the Anomaly Data is generated immediately.</td> <td>Stringified Decimal <font face=\"courier\" size=\"-1\">>= 0.0d</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">0.0d</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a threshold Corridor for Data events on the channel \"Input1\"<br>// and generate an anomaly Data event on the channel \"Output1\" if the<br>// value is outside the range 10 to 30<br>send com.industry.analytics.Analytic(\"Corridor\", [\"Input1\"], [\"Output1\"], {\"lowerThreshold\":\"10\",\"upperThreshold\":\"30\", \"zone\":\"outside\"} ) to \"\";<br>  <br>// Define a threshold Corridor for Data events on the channel \"Input2\"<br>// and generate an anomaly Data event on the channel \"Output2\" if the <br>// value is goes inside the range 10 to 30<br>send com.industry.analytics.Analytic(\"Corridor\", [\"Input2\"], [\"Output2\"], {\"lowerThreshold\":\"10\",\"upperThreshold\":\"30\", \"zone\":\"inside\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DURATION</A> := \"duration\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >INSIDE</A> := \"inside\"</B></CODE><br><br>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"zone\"</font> configuration parameter to use entering the threshold corridor check.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >LOWER_THRESHOLD</A> := \"lowerThreshold\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the lower threshold value to check for.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Corridor\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >OUTSIDE</A> := \"outside\"</B></CODE><br><br>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"zone\"</font> configuration parameter to use exiting the threshold corridor check.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >UPPER_THRESHOLD</A> := \"upperThreshold\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the upper threshold value to check for.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ZONE</A> := \"zone\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the zone of the threshold check</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"DURATION\"></A><H3>DURATION</H3><PRE>constant string&nbsp;<B>DURATION := \"duration\"</B></PRE>This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.<HR><A NAME=\"INSIDE\"></A><H3>INSIDE</H3><PRE>constant string&nbsp;<B>INSIDE := \"inside\"</B></PRE>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"zone\"</font> configuration parameter to use entering the threshold corridor check.<HR><A NAME=\"LOWER_THRESHOLD\"></A><H3>LOWER_THRESHOLD</H3><PRE>constant string&nbsp;<B>LOWER_THRESHOLD := \"lowerThreshold\"</B></PRE>This constant defines the configuration parameter name that specifies the lower threshold value to check for.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Corridor\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"OUTSIDE\"></A><H3>OUTSIDE</H3><PRE>constant string&nbsp;<B>OUTSIDE := \"outside\"</B></PRE>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"zone\"</font> configuration parameter to use exiting the threshold corridor check.<HR><A NAME=\"UPPER_THRESHOLD\"></A><H3>UPPER_THRESHOLD</H3><PRE>constant string&nbsp;<B>UPPER_THRESHOLD := \"upperThreshold\"</B></PRE>This constant defines the configuration parameter name that specifies the upper threshold value to check for.<HR><A NAME=\"ZONE\"></A><H3>ZONE</H3><PRE>constant string&nbsp;<B>ZONE := \"zone\"</B></PRE>This constant defines the configuration parameter name that specifies the zone of the threshold check<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Detectors",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel to check",
                    "name": "Data"
                }
            ],
            "name": "Corridor",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+params"
                    ],
                    "description": "The channel on which to output anomalies",
                    "name": "Breach"
                }
            ],
            "properties": [
                {
                    "description": "Defines the upper threshold value that is used to detect breaches",
                    "name": "upperThreshold",
                    "type": "decimal"
                },
                {
                    "description": "Defines the lower threshold value that is used to detect breaches",
                    "name": "lowerThreshold",
                    "type": "decimal"
                },
                {
                    "description": "Defines whether to check for data inside or outside the corridor",
                    "name": "zone",
                    "type": "string",
                    "validValues": [
                        "inside",
                        "outside"
                    ]
                },
                {
                    "defaultValue": 0,
                    "description": "Defines how long (in seconds) the threshold may be breached before an Anomaly Data is generated. If the value is 0.0d then the Anomaly Data is generated immediately.",
                    "name": "duration",
                    "postfix": "(Seconds)",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0' }"
                }
            ]
        },
        {
            "description": "Detect data outside of a 'usual data' boundary.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.detectors</FONT><BR>Drift</H2><HR>The Drift Analytic monitors a sources <font face=\"courier\" size=\"-1\">dValue</font> to ensure that it doesn't go outside of a set boundary or pair of boundaries. If a boundary is breached then an anomaly Data is generated. Once set these boundaries are fixed, unlike, for example, a Bollinger Band which will mutate along with a slow moving drift in values.<br><br> The boundary values are based upon a moving average taken over a defined initial period for the data source. The boundaries will then be set at a number of standard deviations, a given value, or a percentage above and/or below the final moving average value.<br><br> The moving average and standard deviation are calculated using the same formulas as in the Volatility Analytic.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face=\"courier\" size=\"-1\">params</font> from the Data that breaches the threshold are copied to the anomaly Data.<br></dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>offset</b><td>The amount of 'drift' allowed relative to the mean. The value applied depends on the offsetType used</td> <td><font face=\"courier\" size=\"-1\">>0.0d</font></td></td><td>decimal</td><td>False</td><td>2.0d</td></tr> <tr><td><b>offsetType</b><td>The type of the value that is used as the offset</td> <td><font face=\"courier\" size=\"-1\">\"stddev\", \"absolute\", \"percentage\"</font></td></td><td>string</td><td>False</td><td><font face=\"courier\" size=\"-1\">\"stddev\"</font></td></tr> <tr><td><b>offsetPeriod</b><td>Defines the period over which the initial moving average is calculated.</td> <td>Stringified decimal <font face=\"courier\" size=\"-1\">>0.0d</font></td><td>Decimal</td><td>False</td><td>60.0</td></tr> <tr><td><b>lowerOffsetOverride</b><td>If this value is provided, it overrides the value calculated for the lower boundary.</td> <td><font face=\"courier\" size=\"-1\">>0.0d</font></td><td>Decimal</td><td>False</td><td>The <font face=\"courier\" size=\"-1\">offset</font> value</td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Drift calculations are partitioned based on the <font face=\"courier\" size=\"-1\">sourceId</font> of the <font face=\"courier\" size=\"-1\">Data</font> events</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Drift Analytic to monitor Data events on the channel \"Input1\"<br>// and generate a boundary based on a value 1.2 standard deviations away from the moving average<br>// for that Data stream over a 30 second window. An anomaly Data event will be <br>// generated on the channel \"Output1\" if the value goes outside that range.<br>send com.industry.analytics.Analytic(\"Drift\", [\"Input3\"], [\"Output3\"], {\"offset\":\"1.2\", \"offsetPeriod\":\"30\"}) to \"\";<br><br>// Define a Drift Analytic to monitor Data events on the channel \"Input2\"<br>// and generate a boundary based on a fixed value away from the moving average<br>// for that Data stream over an initial 60 second window. An anomaly Data event <br>// will be generated  on the channel \"Output2\" if the value goes outside that range.<br>send com.industry.analytics.Analytic(\"Drift\", [\"Input3\"], [\"Output3\"], {\"offset\":\"60\", \"offsetType\":\"absolute\", \"offsetPeriod\":\"60\"}) to \"\";<br>   <br>// Define a Drift Analytic to monitor Data events on the channel \"Input3\"<br>// and generate a boundary based on a value 30% away from the moving average<br>// for that Data stream over a 20 second window. An anomaly Data event will be <br>// generated on the channel \"Output3\" if the value goes outside that range.<br>send com.industry.analytics.Analytic(\"Drift\", [\"Input3\"], [\"Output3\"], {\"offset\":\"30\", \"offsetType\":\"percentage\", \"offsetPeriod\":\"20\"}) to \"\";<br></pre></dd> </dl><DL><DT><B>See Also:</B></DT><DD>com.industry.analytics.Volatility&nbsp;-&nbsp;The Volatility Analytic.</DD></DL><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the drift calculation will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >LOWER_OFFSET_OVERRIDE</A> := \"lowerOffsetOverride\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the overridden lower offset value, if used.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Drift\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >OFFSET</A> := \"offset\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the boundary offset value.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >OFFSET_PERIOD</A> := \"offsetPeriod\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the period over which the initial boundary moving average is calculated.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >OFFSET_TYPE</A> := \"offsetType\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the type of the offset value defined.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the drift calculation will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"LOWER_OFFSET_OVERRIDE\"></A><H3>LOWER_OFFSET_OVERRIDE</H3><PRE>constant string&nbsp;<B>LOWER_OFFSET_OVERRIDE := \"lowerOffsetOverride\"</B></PRE>This constant defines the configuration parameter name that specifies the overridden lower offset value, if used.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Drift\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"OFFSET\"></A><H3>OFFSET</H3><PRE>constant string&nbsp;<B>OFFSET := \"offset\"</B></PRE>This constant defines the configuration parameter name that specifies the boundary offset value.<HR><A NAME=\"OFFSET_PERIOD\"></A><H3>OFFSET_PERIOD</H3><PRE>constant string&nbsp;<B>OFFSET_PERIOD := \"offsetPeriod\"</B></PRE>This constant defines the configuration parameter name that specifies the period over which the initial boundary moving average is calculated.<HR><A NAME=\"OFFSET_TYPE\"></A><H3>OFFSET_TYPE</H3><PRE>constant string&nbsp;<B>OFFSET_TYPE := \"offsetType\"</B></PRE>This constant defines the configuration parameter name that specifies the type of the offset value defined.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Detectors",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel to check for drift",
                    "name": "Data"
                }
            ],
            "name": "Drift",
            "outputChannels": [
                {
                    "description": "The channel on which to output drift anomalies",
                    "name": "Drift"
                }
            ],
            "properties": [
                {
                    "defaultValue": 2.0,
                    "description": "The amount of 'drift' allowed relative to the mean. The value applied depends on the offsetType used",
                    "name": "offset",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "defaultValue": "stddev",
                    "description": "The type of the value that is used as the offset",
                    "name": "offsetType",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "stddev",
                        "absolute",
                        "percentage"
                    ]
                },
                {
                    "defaultValue": 60.0,
                    "description": "Defines the period over which the initial moving average is calculated.",
                    "name": "offsetPeriod",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "description": "If this value is provided, it overrides the value calculated for the lower boundary.",
                    "name": "lowerOffsetOverride",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "If defined, the Drift calculations are partitioned based on the sourceId parameter of the input data stream",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "description": "Detect missing data in a stream.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.detectors</FONT><BR>MissingData</H2><HR>The MissingData Analytic computation generates an Anomaly type of Data when no data is being received on the input channel. The period is a multiple of either a fixed time period in the configuration or a weighted average calculated from the timings of events which have been received. The computation will give out a set number of repeated anomalies after each subsequent multiple of the timeout period and can also calculate the timeout based for each individual source or calculated across all the sources combined.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated. No params are populated as by definition there are no input Mreasures when the output is generated.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>interval</b></td><td>Defines the time window that data must be received within. The actual units are based on the value of the <font face=\"courier\" size=\"-1\">intervalType</font> parameter</td> <td>Stringified decimal value <font face=\"courier\" size=\"-1\">> 0.0d</font></td><td>Decimal</td> <td>False</td><td>4.0d</td></tr> <tr><td><b>intervalType</b></td><td>Defines the unit type of the <font face=\"courier\" size=\"-1\">interval</font> parameter.</td> <td><font face=\"courier\" size=\"-1\">\"seconds\"</font> or <font face=\"courier\" size=\"-1\">\"stddev\"</font></font></td><td>String</td> <td>False</td><td><font face=\"courier\" size=\"-1\">\"stddev\"</font></td></tr> <tr><td><b>repeats</b></td><td>Defines the number of times an Anomaly Data is generated for missing data before stopping checking until another event for that sourceId is received again.</td> <td>Stringified integer value <font face=\"courier\" size=\"-1\">>= 0</font></td><td>Integer</td> <td>False</td><td><font face=\"courier\" size=\"-1\">1</font></td></tr> <tr><td><b>timeFactor</b></td><td>Defines a scaling factor for the time window. This is applied regardless of if the EWMA or a fixed time period is configured</td> <td>Stringified decimal value <font face=\"courier\" size=\"-1\">> 0</font></td><td>Decimal</td> <td>False</td><td><font face=\"courier\" size=\"-1\">3</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Missing Data calculations are partitioned based on the sourceId parameter of the input data stream</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a MissingData Analytic for Data events on the channel \"Input1\"<br>// and generate an anomaly Data event on the channel \"Output1\" if another event<br>// from that sourceId has not been received on the input channel within a 10 second time period<br>send com.industry.analytics.Analytic(\"MissingData\", [\"Input1\"], [\"Output1\"], {\"interval\":\"10.0\"} ) to \"\";<br><br>// Define a MissingData Analytic for Data events on the channel \"Input2\"<br>// and generate an anomaly Data event on the channel \"Output2\" if another event<br>// from that sourceId has not been received on the input channel within a time period calculated from the  <br>// exponentially weighted moving average (EWMA) time between previous events on the same stream<br>send com.industry.analytics.Analytic(\"MissingData\", [\"Input2\"], [\"Output2\"], new dictionary&ltstring,string&gt ) to \"\";<br>                                          <br>// Define a MissingData Analytic for Data events on the channel \"Input3\"<br>// and generate an anomaly Data event on the channel \"Output3\" if another event <br>// has not been received for the ANY sourceId on the input channel within a 10 second time period <br>send com.industry.analytics.Analytic(\"MissingData\", [\"Input3\"], [\"Output3\"], {\"interval\":\"10.0\", \"bySourceId\":\"false\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the missing data calculation will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >INTERVAL</A> := \"interval\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the time window value that data must be received within.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >INTERVAL_TYPE</A> := \"intervalType\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the type of the interval value defined.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"MissingData\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >REPEATS</A> := \"repeats\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the number of repeating times data is missed before terminating the check.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIMEFACTOR</A> := \"timeFactor\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies a scaling factor for the time window.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the missing data calculation will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"INTERVAL\"></A><H3>INTERVAL</H3><PRE>constant string&nbsp;<B>INTERVAL := \"interval\"</B></PRE>This constant defines the configuration parameter name that specifies the time window value that data must be received within.<HR><A NAME=\"INTERVAL_TYPE\"></A><H3>INTERVAL_TYPE</H3><PRE>constant string&nbsp;<B>INTERVAL_TYPE := \"intervalType\"</B></PRE>This constant defines the configuration parameter name that specifies the type of the interval value defined.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"MissingData\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"REPEATS\"></A><H3>REPEATS</H3><PRE>constant string&nbsp;<B>REPEATS := \"repeats\"</B></PRE>This constant defines the configuration parameter name that specifies the number of repeating times data is missed before terminating the check.<HR><A NAME=\"TIMEFACTOR\"></A><H3>TIMEFACTOR</H3><PRE>constant string&nbsp;<B>TIMEFACTOR := \"timeFactor\"</B></PRE>This constant defines the configuration parameter name that specifies a scaling factor for the time window.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Detectors",
            "inputChannels": [
                {
                    "description": "The channel to check for missing data",
                    "name": "Data"
                }
            ],
            "name": "MissingData",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The channel on which to output missing data anomalies",
                    "name": "Missing Data"
                }
            ],
            "properties": [
                {
                    "advanced": true,
                    "defaultValue": 4,
                    "description": "Defines the time window that data must be received within. The actual units are based on the value of the intervalType parameter.",
                    "name": "interval",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "defaultValue": "stddev",
                    "description": "The type of the value that is used as the interval",
                    "name": "intervalType",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "stddev",
                        "seconds"
                    ]
                },
                {
                    "defaultValue": 1,
                    "description": "Defines the number of times an Anomaly Data is generated for missing data before stopping checking until another event for that sourceId is received again. (Zero is infinite)",
                    "name": "repeats",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": 3,
                    "description": "Defines a scaling factor for the time window. This is applied regardless of if the EWMA or a fixed time period is configured",
                    "name": "timeFactor",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": "true",
                    "description": "If defined, the Missing Data calculations are partitioned based on the sourceId parameter of the input data stream",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "description": "Detect data outside the normal range of values.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.detectors</FONT><BR>PeerAnalysis</H2><HR>The Peer Analysis Analytic calculates the \"normal\" range of Data events and detects if incoming Data events are outside that range. It does this by calculating the spread between the raw Data events being received and a moving average calculated for that same set of Data.  It then generates an anomaly Data event if the the calculated Spread is breaches the defined threshold value. This Analytic utilizes the Average, Spread and Threshold analytics internally, so the same set of configuration parameters are available in this Analytic. This allows the moving Average timewindow to be defined, and the threshold value can either look for rising breaches, falling breaches or every time a threshold is passed in both directions. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.<br><br> In addition the computation can output a data event for up to a set maximum number of repeats (multiples of the duration) whilst the breach continues. This latter functionality is not applicable for the bi-directional breach detection as after the duration, the breached side is now considered the valid side and a breach reported for crossing the threshold in the opposite direction.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated.  All the <font face=\"courier\" size=\"-1\">params</font> from the breaching input Data are copied to the anomaly Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window to calculate the moving average over</td> <td>Stringified decimal <font face=\"courier\" size=\"-1\">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">60.0d</font></td></tr> <tr><td><b>threshold</b></td><td>Defines the threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td></td></tr> <tr><td><b>direction</b></td><td>Defines whether to check for crossing, falling or rising threshold breaches</td> <td><font face=\"courier\" size=\"-1\">\"crossing\"</font>, <font face=\"courier\" size=\"-1\">\"falling\"</font> or <font face=\"courier\" size=\"-1\">\"rising\"</font>. <b>Note:</b> These values are case-insensitive</td> <td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">'crossing'</font></td></tr> <tr><td><b>duration</b></td><td>Defines how long (in seconds) the threshold may be breached before an Anomaly Data is generated. If a value of <font face=\"courier\" size=\"-1\"><=0.0d</font> is defined, the Anomaly Data is generated immediately.</td> <td>Stringified Decimal <font face=\"courier\" size=\"-1\">>= 0.0d</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">0.0d</font></td></tr> <tr><td><b>repeats</b></td><td>Defines the maximum number of times an Anomaly Data is generated for the breach before stopping checking. A value of <font face=\"courier\" size=\"-1\">0</font> indicates unlimited repeats. </td> <td>Stringified Integer <font face=\"courier\" size=\"-1\">>= 0</font></td><td>Integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">1</font></td> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a PeerAnalysis Analytic for Data events on the channel \"Input1\"<br>// and generate an anomaly Data event on the channel \"Output1\" if the difference <br>// between the current Data event and the moving average of Data events<br>// goes over the defined threshold value of 10.0<br>send com.industry.analytics.Analytic(\"PeerAnalysis\", [\"Input1\"], [\"Output1\"], {\"threshold\":\"10.0\"} ) to \"\";<br><br>// Define a PeerAnalysis Analytic for Data events on the channel \"Input2\"<br>// and generate an anomaly Data event on the channel \"Output2\" if the difference <br>// between the current Data event and the moving average, calculated over a <br>// 30 second timewindow, of Data events goes over the defined threshold value of 10.0<br>send com.industry.analytics.Analytic(\"PeerAnalysis\", [\"Input2\"], [\"Output2\"], {\"threshold\":\"10.0\",\"timeWindow\":\"30.0\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"PeerAnalysis\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"PeerAnalysis\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Detectors",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel to perform the Peer Analysis",
                    "name": "Data"
                }
            ],
            "name": "PeerAnalysis",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue",
                        "+params"
                    ],
                    "description": "The channel on which to output threshold breaches",
                    "name": "Breaches"
                }
            ],
            "properties": [
                {
                    "description": "The threshold value that is used to detect breaches",
                    "name": "threshold",
                    "type": "decimal"
                },
                {
                    "defaultValue": "crossing",
                    "description": "Whether to check for crossing, falling or rising threshold breaches",
                    "name": "direction",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "crossing",
                        "falling",
                        "rising"
                    ]
                },
                {
                    "defaultValue": 0,
                    "description": "How long (in seconds) the threshold may be breached before an Anomaly Data is generated. If value=0.0d, then Anomaly Data is generated immediately.",
                    "name": "duration",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0' }"
                },
                {
                    "defaultValue": 1,
                    "description": "The maximum number of times an Anomaly Data is generated for the breach before stopping checking. A value of 0 indicates unlimited repeats.",
                    "name": "repeats",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0' }"
                },
                {
                    "defaultValue": 60,
                    "description": "Defines the time window to calculate the moving average over",
                    "name": "timeWindow",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0.0' }"
                }
            ]
        },
        {
            "description": "Automatically detect unusual spikes in a data stream.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.detectors</FONT><BR>Spike</H2><HR>The Spike Analytic takes a set of input Data events and, using the same time weighted calculations as used in the Average and Volatility Analytics, calculates the Nominal Range as a Bollinger Band centred on the moving average and bounded by a configured multiple of the standard deviation away from the moving average.<br><br> The analytic will also optionally output to configured channels the output from various stages of the Bollinger calculation to save duplicate calculations within a separate analytic.<br><br> If the input Data breaks the Nominal Range then an Anomaly Data is always output. By default, no output is generated when the bounds have not been breached, but this can optionally be enabled by setting the <font face=\"courier\" size=\"-1\">\"verbose\"</font> parameter to <font face=\"courier\" size=\"-1\">true</font>. These Data events will be output as Computed Data events.<br><br> In both cases, the <font face=\"courier\" size=\"-1\">dValue</font> set on the Data event is the number of standard deviations that the input Data <font face=\"courier\" size=\"-1\">dValue</font> is away from the moving average.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single Data stream name must be provided.<br>The resulting generated Data events on that stream name will either be:</ul> <li>Anomaly Data events if the Nominal Range has been breached.</li> <li>(Optionally enabled) Computed Data events if the Nominal Range has not been breached</li> </ul> In both cases, the Data events <font face=\"courier\" size=\"-1\">dValue</font> is set to the number of standard deviations that the input Data <font face=\"courier\" size=\"-1\">dValue</font> is away from the moving average. All the parameters from the input Data are copied to the output Data events.<br><br> A set of Computed Data streams can also be optionally enabled in the Analytics outputDataName parameter by providing the channel name with the corresponding prefix. For example, specifying the outputChannelName with \"stddev:MyStandardDeviationChannel\", will send Data events containing the calculated standard deviation on the channel \"MyStandardDeviationChannel\".<br><br> The table below defines the computed data stream type and the prefix required:<ul> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Calculation Type</th><th>Description</th><th>Output Channel Name Prefix</th></tr> <tr><td><b>Upper boundary</b></td><td>If this parameter is provided, Data events containing the calculated upper Nominal Range will be sent on the stream name provided by this parameters value</td><td><font face=\"courier\" size=\"-1\">upper:</font></td></tr> <tr><td><b>Lower boundary</b></td><td>If this parameter is provided, Data events containing the calculated lower Nominal Range will be sent on the stream name provided by this parameters value</td><td><font face=\"courier\" size=\"-1\">lower:</font></td></tr> <tr><td><b>Moving average</b></td><td>If this parameter is provided, Data events containing the calculated moving average data will be sent on the stream name provided by this parameters value</td><td><font face=\"courier\" size=\"-1\">avg:</font></td></tr> <tr><td><b>Standard deviation</b></td><td>If this parameter is provided, Data events containing the calculated standard deviation data will be sent on the stream name provided by this parameters value</td><td><font face=\"courier\" size=\"-1\">stddev:</font></td></tr> <tr><td><b>Variance</b></td><td>If this parameter is provided, Data events containing the calculated variance data will be sent on the stream name provided by this parameters value</td><td><font face=\"courier\" size=\"-1\">variance:</font></td></tr> </table></dd> </dd> </dl><dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>The time window (in seconds) that moving average is calculated on</td> <td>Value must be > 0</td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">60.0d</font></td></tr> <tr><td><b>standardDeviationMultiple</b></td><td>Sets the width of the Nominal Range in STDDEV</td> <td>Value must be > 0</td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">2</font></td></tr> <tr><td><b>verbose</b></td><td>Enables/Disables the verbose mode so that computed values are generated as well as anomaly values.</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">false</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Spike Analytic for Data events on the channel \"Input1\"<br>// and generate an anomaly Data event on the channel \"Output1\" if the value goes outside<br>// 2.0 standard deviations away from the moving average which was calculated over 10.0 seconds <br>send com.industry.analytics.Analytic(\"Spike\", [\"Input1\"], [\"Output1\"], {\"timeWindow\":\"10.0\",\"standardDeviationMultiple\":\"2.0\"} ) to \"\";<br><br>// Define a Spike Analytic for Data events on the channel \"Input1\"<br>// and generate an anomaly Data event on the channel \"Output2\" if the value goes outside   <br>// 2.0 standard deviations away from the moving average which was calculated over 10.0 seconds. <br>// Also send the raw Data events on the \"Output2\" channel, the values calculated<br>// for the upper and lower boundaries on \"UpperChannel\" and \"LowerChannel\", and <br>// the moving Average calculation on the \"AverageChannel\"<br>send com.industry.analytics.Analytic(\"Spike\", [\"Input2\"], [\"Output2\", \"upper:UpperChannel\",\"lower:LowerChannel\",\"avg:AverageChannel\",\"verbose:true\"], <br>\t\t\t\t\t\t{\"timeWindow\":\"10.0\",\"standardDeviationMultiple\":\"2.0\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Spike\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >STANDARD_DEVIATION_MULTIPLE</A> := \"standardDeviationMultiple\"</B></CODE><br><br>This constant defines the configuration parameter name for the width of the Nominal Range in STDDEVs (as a decimal value)</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIMEWINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name for the time window (in seconds as a decimal) that moving average is calculated on</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >VERBOSE</A> := \"verbose\"</B></CODE><br><br>This constant defines the configuration parameter name for enabling Verbose mode on/off.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Spike\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"STANDARD_DEVIATION_MULTIPLE\"></A><H3>STANDARD_DEVIATION_MULTIPLE</H3><PRE>constant string&nbsp;<B>STANDARD_DEVIATION_MULTIPLE := \"standardDeviationMultiple\"</B></PRE>This constant defines the configuration parameter name for the width of the Nominal Range in STDDEVs (as a decimal value)<HR><A NAME=\"TIMEWINDOW\"></A><H3>TIMEWINDOW</H3><PRE>constant string&nbsp;<B>TIMEWINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name for the time window (in seconds as a decimal) that moving average is calculated on<HR><A NAME=\"VERBOSE\"></A><H3>VERBOSE</H3><PRE>constant string&nbsp;<B>VERBOSE := \"verbose\"</B></PRE>This constant defines the configuration parameter name for enabling Verbose mode on/off.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Detectors",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel to check for spikes",
                    "name": "Data"
                }
            ],
            "name": "Spike",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue"
                    ],
                    "description": "The channel on which to output spike anomalies",
                    "name": "Spikes"
                },
                {
                    "dataProperties": [
                        "+dValue",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The channel on which to output the moving average",
                    "name": "Moving Average",
                    "optional": true,
                    "prefix": "avg:",
                    "type": "string"
                },
                {
                    "dataProperties": [
                        "+dValue",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The channel on which to output the moving average",
                    "name": "Variance",
                    "optional": true,
                    "prefix": "variance:",
                    "type": "string"
                },
                {
                    "dataProperties": [
                        "+dValue",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The channel on which to output the Standard deviation",
                    "name": "Standard Deviation",
                    "optional": true,
                    "prefix": "stddev:",
                    "type": "string"
                },
                {
                    "dataProperties": [
                        "+dValue",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The channel on which to output the upper boundary",
                    "name": "Upper",
                    "optional": true,
                    "prefix": "upper:",
                    "type": "string"
                },
                {
                    "dataProperties": [
                        "+dValue",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The channel on which to output the lower boundary",
                    "name": "Lower",
                    "optional": true,
                    "prefix": "lower:",
                    "type": "string"
                }
            ],
            "properties": [
                {
                    "defaultValue": "60.0d",
                    "description": "The time window (in seconds) that moving average is calculated on",
                    "name": "timeWindow",
                    "type": "decimal",
                    "optional": true,
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": "2.0d",
                    "description": "Sets the width of the Nominal Range in STDDEV",
                    "name": "standardDeviationMultiple",
                    "type": "decimal",
                    "optional": true,
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": false,
                    "description": "Enables/Disables the verbose mode so that computed values are generated as well as anomaly values.",
                    "name": "verbose",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "description": "Detect data above or below a threshold.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.detectors</FONT><BR>Threshold</H2><HR>The Threshold Analytic generates an anomaly Data event if a threshold is breached. The computation can either look for rising breaches, falling breaches or every time a threshold is passed in both directions. These can either be reported immediately or, to ignore spikes, after a set duration based on the Data timestamps.<br><br> In addition the computation can output a data event for up to a set maximum number of repeats (multiples of the duration) whilst the breach continues. This latter functionality is not applicable for the bi-directional breach detection as after the duration, the breached side is now considered the valid side and a breach reported for crossing the threshold in the opposite direction.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Anomaly type are generated.  All the <font face=\"courier\" size=\"-1\">params</font> from the breaching input Data are copied to the anomaly Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>threshold</b></td><td>Defines the threshold value that is used to detect breaches</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td></td></tr> <tr><td><b>direction</b></td><td>Defines whether to check for crossing, falling or rising threshold breaches</td> <td><font face=\"courier\" size=\"-1\">\"crossing\"</font>, <font face=\"courier\" size=\"-1\">\"falling\"</font> or <font face=\"courier\" size=\"-1\">\"rising\"</font>. <b>Note:</b> These values are case-insensitive</td> <td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">'crossing'</font></td></tr> <tr><td><b>duration</b></td><td>Defines how long (in seconds) the threshold may be breached before an Anomaly Data is generated. If a value of <font face=\"courier\" size=\"-1\"><=0.0d</font> is defined, the Anomaly Data is generated immediately.</td> <td>Stringified Decimal <font face=\"courier\" size=\"-1\">>= 0.0d</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">0.0d</font></td></tr> <tr><td><b>repeats</b></td><td>Defines the maximum number of times an Anomaly Data is generated for the breach before stopping checking. A value of <font face=\"courier\" size=\"-1\">0</font> indicates unlimited repeats. </td> <td>Stringified Integer <font face=\"courier\" size=\"-1\">>= 0</font></td><td>Integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">1</font></td> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Threshold Analytic for Data events on the channel \"Input1\"<br>// and generate an anomaly Data event on the channel \"Output1\" if the value falls<br>// below the defined threshold value of 10.0<br>send com.industry.analytics.Analytic(\"Threshold\", [\"Input1\"], [\"Output1\"], {\"threshold\":\"10.0\",\"direction\":\"falling\"} ) to \"\";<br><br>// Define a Threshold Analytic for Data events on the channel \"Input2\"<br>// and generate an anomaly Data event  on the channel \"Output2\" if the value goes<br>// above the defined threshold value of 60.0 for over 5.0seconds.<br>send com.industry.analytics.Analytic(\"Threshold\", [\"Input1\"], [\"Output1\"], {\"threshold\":\"60.0\",\"direction\":\"rising\",\"duration\":\"5.0\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >CROSSING</A> := \"crossing\"</B></CODE><br><br>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"direction\"</font> configuration parameter to use a crossing threshold breach check.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DIRECTION</A> := \"direction\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the direction of the threshold check</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DURATION</A> := \"duration\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >FALLING</A> := \"falling\"</B></CODE><br><br>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"direction\"</font> configuration parameter to use a falling threshold breach check.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Threshold\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >REPEATS</A> := \"repeats\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the maximum number of times a threshold can be breached before Anomaly data event will be generated.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >RISING</A> := \"rising\"</B></CODE><br><br>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"direction\"</font> configuration parameter to use a rising threshold breach check.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >THRESHOLD</A> := \"threshold\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the threshold value to check for.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"CROSSING\"></A><H3>CROSSING</H3><PRE>constant string&nbsp;<B>CROSSING := \"crossing\"</B></PRE>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"direction\"</font> configuration parameter to use a crossing threshold breach check.<HR><A NAME=\"DIRECTION\"></A><H3>DIRECTION</H3><PRE>constant string&nbsp;<B>DIRECTION := \"direction\"</B></PRE>This constant defines the configuration parameter name that specifies the direction of the threshold check<HR><A NAME=\"DURATION\"></A><H3>DURATION</H3><PRE>constant string&nbsp;<B>DURATION := \"duration\"</B></PRE>This constant defines the configuration parameter name that specifies the duration the threshold can be breached before an Anomaly data event is generated.<HR><A NAME=\"FALLING\"></A><H3>FALLING</H3><PRE>constant string&nbsp;<B>FALLING := \"falling\"</B></PRE>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"direction\"</font> configuration parameter to use a falling threshold breach check.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Threshold\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"REPEATS\"></A><H3>REPEATS</H3><PRE>constant string&nbsp;<B>REPEATS := \"repeats\"</B></PRE>This constant defines the configuration parameter name that specifies the maximum number of times a threshold can be breached before Anomaly data event will be generated.<HR><A NAME=\"RISING\"></A><H3>RISING</H3><PRE>constant string&nbsp;<B>RISING := \"rising\"</B></PRE>This constant defines the value for setting the <font face=\"courier\" size=\"-1\">\"direction\"</font> configuration parameter to use a rising threshold breach check.<HR><A NAME=\"THRESHOLD\"></A><H3>THRESHOLD</H3><PRE>constant string&nbsp;<B>THRESHOLD := \"threshold\"</B></PRE>This constant defines the configuration parameter name that specifies the threshold value to check for.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Detectors",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel to check for threshold breaches",
                    "name": "Data"
                }
            ],
            "name": "Threshold",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+params"
                    ],
                    "description": "The channel on which to output threshold breaches",
                    "name": "Breaches"
                }
            ],
            "properties": [
                {
                    "description": "The threshold value that is used to detect breaches",
                    "name": "threshold",
                    "type": "decimal"
                },
                {
                    "defaultValue": "crossing",
                    "description": "Whether to check for crossing, falling or rising threshold breaches",
                    "name": "direction",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "crossing",
                        "falling",
                        "rising"
                    ]
                },
                {
                    "defaultValue": 0,
                    "description": "How long (in seconds) the threshold may be breached before an Anomaly Data is generated. If value=0.0d, then Anomaly Data is generated immediately.",
                    "name": "duration",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0' }"
                },
                {
                    "defaultValue": 1,
                    "description": "The maximum number of times an Anomaly Data is generated for the breach before stopping checking. A value of 0 indicates unlimited repeats.",
                    "name": "repeats",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0' }"
                }
            ]
        },
        {
            "description": "Connect to PMML predictive model.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.extensions</FONT><BR>Prediction</H2><HR>The Prediction Analytic takes the specified input Data values and inputs them into a defined Predictive (PMML) model, gets the result from the Apama Predictive Analytics plugin and generates the specified Data events with the results. The Apama Predictive Analytics plugin must also be installed (a separate license may also be required).<br><br> In addition to the parameters specified below the Analytic will also pass through the following plugin parameters to the plugin setup. Please see the Apama Predictive Analytics plugin documentation for more details on these parameters: configDirectory, workDirectory, recordLatency, logLatency.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>At least one input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>At least one output Data stream name must be provided.<br></dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>combineParams</b></td><td>Defines whether the output Data events have a combination of all the params in the Data events used for the calculation (true) or just the params from the input Data from the alphabetically first input stream (false). The latter is more performant.</td> <td>Stringified boolean</font></td><td>boolean</td><td>False</td><td>false</td></tr> <tr><td><b>modelName</b></td><td>The name of the model to be used within the PMML file.</td> <td>Non-Empty String</td><td>String</td><td>True</td><td></td></tr> <tr><td><b>pmmlFileDirectory</b></td><td>The directory containing the PMML model.</td> <td>Non-Empty String</td><td>String</td><td>False.</td><td>Current working directory.</td></tr> <tr><td><b>pmmlFileName</b></td><td>The file containing the PMML model.</td> <td>Non-Empty String</td><td>String</td><td>True</td><td></td></tr> <tr><td><b>synchronous</b></td><td>Whether the input stream Data events should be dealt with synchronously or as they arrive.</td> <td>True / False</td><td>Boolean</td><td>False</td><td>True</td></tr> <tr><td><b>&lt;input parameter name&gt;</b></td><td>The mapping of an input parameter to the PMML model to a value within one of the input Data events. These parameters use the syntax \"<channel_name>.[DVALUE|SVALUE|XVALUE|YVALUE|ZVALUE|PVALUE.<param_name>]\". For example, \"Input1.DVALUE\" would use the \"dValue\" parameter of Data events received on the input channel \"Input1\" for the value of the named input parameter. Whereas \"Input2.PVALUE.myValue\" would use the parameter \"myValue\" in the \"params\" of Data events received on the input channel \"Input2\" for the value of the named input parameter. If necessary the parameter can be prefixed by 'input.' to avoid confusion when a model uses the same name for both an input and output parameter.</td> <td>Non-Empty String</td><td>String</td><td>True when mandatory in the model.</td><td></td></tr> <tr><td><b>&lt;output parameter name&gt;</b></td><td>The mapping of an output parameter to the PMML model to a value within one of the output Data events. These parameters use the syntax \"<channel_name>.[DVALUE|SVALUE|XVALUE|YVALUE|ZVALUE|PVALUE.<param_name>]\". For example, \"Output1.DVALUE\" would put the value from the named output parameter into the \"dValue\" parameter of Data events and publish them on the output channel \"Output1\".  Whereas \"Output2.PVALUE.myValue\" would put the value from the named output parameter into a parameter called \"myValue\" in the \"params\" of Data events that are sent on the output channel \"Output2\". If necessary the parameter can be prefixed by 'output.' to avoid confusion when a model uses the same name for both an input and output parameters.</td> <td>Non-Empty String</td><td>String</td><td>True when mandatory in the model.</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Prediction Analytic to pass Data events on the channel \"Input1\"<br>// to a specified PMML model (the \"PredictedEngineStatus\" model defined in  <br>// the \"Engine.pmml\" file) and generate a Data event with the results of <br>// the model in the \"dValue\" parameter and send to the channel \"PMMLRESULT\".<br>// The model is defined to take the Temperature, Pressure and RPM values from <br>// the \"xValue\", \"yValue\" and \"zValue\" parameters of the incoming Data event.<br>send com.industry.analytics.Analytic(\"Prediction\", [\"Input1\"], [\"PMMLRESULT\"],<br>\t\t\t\t\t\t\t\t{\"modelName\":\"PredictedEngineStatus\",<br>\t\t\t\t\t\t\t\t \"pmmlFileName\":\"Engine.pmml\",<br>\t\t\t\t\t\t\t\t \"pmmlFileDirectory\":\"./model\",<br>\t\t\t\t\t\t\t\t \"Temperature\":\"Input1.XVALUE\",<br>\t\t\t\t\t\t\t\t \"Pressure\":\"Input1.YVALUE\",<br>\t\t\t\t\t\t\t\t \"RPM\":\"Input1.ZVALUE\",<br>\t\t\t\t\t\t\t\t \"model_output\":\"PMMLRESULT.DVALUE\"}) to \"\";<br></pre></dd> </dl><HR><A NAME=\"import_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Import Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;TimeFormatPlugin</CODE></FONT></TD><TD><CODE><B><A >timeFormat</A></B></CODE><br><br>TimeFormat event for timestamps.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >COMBINE_PARAMS</A> := \"combineParams\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether params should be combined instead of being taken from the last Data in a gradient calculation.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >MODEL_NAME</A> := \"modelName\"</B></CODE><br><br>This constant defines the configuration parameter name giving the model name within the PMML file.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Prediction\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >PMML_FILE_DIRECTORY</A> := \"pmmlFileDirectory\"</B></CODE><br><br>This constant defines the configuration parameter name giving the directory containing the PMML model.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >PMML_FILE_NAME</A> := \"pmmlFileName\"</B></CODE><br><br>This constant defines the configuration parameter name giving the filename containing the PMML model.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"import_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Import Detail</B></FONT></TH></TR></TABLE><A NAME=\"timeFormat\"></A><H3>timeFormat</H3><PRE>TimeFormatPlugin&nbsp;<B>timeFormat</B></PRE>TimeFormat event for timestamps.<HR><A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"COMBINE_PARAMS\"></A><H3>COMBINE_PARAMS</H3><PRE>constant string&nbsp;<B>COMBINE_PARAMS := \"combineParams\"</B></PRE>This constant defines the configuration parameter name that defines whether params should be combined instead of being taken from the last Data in a gradient calculation.<HR><A NAME=\"MODEL_NAME\"></A><H3>MODEL_NAME</H3><PRE>constant string&nbsp;<B>MODEL_NAME := \"modelName\"</B></PRE>This constant defines the configuration parameter name giving the model name within the PMML file.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Prediction\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"PMML_FILE_DIRECTORY\"></A><H3>PMML_FILE_DIRECTORY</H3><PRE>constant string&nbsp;<B>PMML_FILE_DIRECTORY := \"pmmlFileDirectory\"</B></PRE>This constant defines the configuration parameter name giving the directory containing the PMML model.<HR><A NAME=\"PMML_FILE_NAME\"></A><H3>PMML_FILE_NAME</H3><PRE>constant string&nbsp;<B>PMML_FILE_NAME := \"pmmlFileName\"</B></PRE>This constant defines the configuration parameter name giving the filename containing the PMML model.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Extensions",
            "inputChannels": [
                {
                    "description": "An input to the PMML model",
                    "name": "Data",
                    "repeated": true
                }
            ],
            "name": "Prediction",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue",
                        "+sValue",
                        "+xValue",
                        "+yValue",
                        "+zValue",
                        "+params"
                    ],
                    "description": "An output from the PMML model",
                    "name": "PMML Output"
                }
            ],
            "properties": [
                {
                    "advanced": true,
                    "defaultValue": false,
                    "description": "Defines whether the output Data events have a combination of all the params in the Data events used for the calculation (true) or just the params from the input Data from the alphabetically first input stream (false). The latter is more performant.",
                    "name": "combineParams",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "description": "The name of the model to be used within the PMML file.",
                    "name": "modelName",
                    "type": "string",
                    "validator": "function(value) { return value.trim().length > 0 || 'Must provide a model name' }"
                },
                {
                    "advanced": true,
                    "defaultValue": "Current working directory",
                    "description": "Defines whether to check for data inside or outside the corridor. Required when the model file is not in the working directory.",
                    "name": "pmmlFileDirectory",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.trim().length > 0 || 'Must provide a pmml directory name' }"
                },
                {
                    "description": "The file containing the PMML model.",
                    "name": "pmmlFileName",
                    "type": "string",
                    "validator": "function(value) { return value.trim().length > 0 || 'Must provide a file name' }"
                },
                {
                    "defaultValue": true,
                    "description": "Whether the input stream Data events should be dealt with synchronously or as they arrive.",
                    "name": "synchronous",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "description": "The mapping of an input and output parameters for the PMML model to a value within one of the input or output Data events. See documentation for further details on the syntax.",
                    "name": "input / output parameter name",
                    "repeated": true,
                    "type": "string"
                }
            ]
        },
        {
            "description": "Combines multiple data streams into a single stream.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.flow_manipulation</FONT><BR>Combiner</H2><HR>The Combiner Analytic takes one or more input channels, combines the unmodified event received onto a single output channel. If the optional parameter <font face=\"courier\" size=\"-1\">aggregatedSourceId</font> is provided, the Combiner aggregates all incoming <font face=\"courier\" size=\"-1\">Data</font> events by modifying their <font face=\"courier\" size=\"-1\">sourceId</font> to the one provided. This then allows the data to be treated as a singular aggregated source.  For example, if a calculation is required in which the original source of the data values are irrelevant. If the <font face=\"courier\" size=\"-1\">Data</font> events type is <font face=\"courier\" size=\"-1\">RAW</font>, the original <font face=\"courier\" size=\"-1\">sourceId</font> is added to the generated <font face=\"courier\" size=\"-1\">Data</font> events <font face=\"courier\" size=\"-1\">params</font>.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>One or more input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>aggregatedSourceId</b></td><td>If defined, all Data events that are combined will be modified to use the defined <font face=\"courier\" size=\"-1\">sourceId</font></td> <td>Non-Empty String</td><td>String</td><td>False</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Combiner Analytic which takes Data events from two separate <br>// input channels (\"Input1\" and \"Input2\") and publishes the events onto <br>// a single output channel (\"Output1\")<br>send com.industry.analytics.Analytic(\"Combiner\", [\"Input1\",\"Input2\"], [\"Output1\"], new dictionary&ltstring,string&gt ) to \"\";<br><br>// Define a Combiner Analytic which takes Data events from two separate <br>// input channels (\"Input1\" and \"Input2\") and publishes the events onto <br>// a single output channel (\"Output1\") and replaces the sourceId parameter<br>// of all events with the aggregated SourceId of \"myNewId\"<br>send com.industry.analytics.Analytic(\"Combiner\", [\"Input1\",\"Input2\"], [\"Output1\"], {\"aggregatedSourceId\":\"myNewId\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >AGGREGATED_SOURCEID</A> := \"aggregatedSourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that must be defined when creating an instance of this Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Combiner\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ORIGINAL_SOURCEID</A> := \"originalSourceId\"</B></CODE><br><br>This constant defines the configuration parameter name of the originator <font face=\"courier\" size=\"-1\">sourceId</font> that will be cached in the output Data events that are generated by this Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"AGGREGATED_SOURCEID\"></A><H3>AGGREGATED_SOURCEID</H3><PRE>constant string&nbsp;<B>AGGREGATED_SOURCEID := \"aggregatedSourceId\"</B></PRE>This constant defines the configuration parameter name that must be defined when creating an instance of this Analytic.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Combiner\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"ORIGINAL_SOURCEID\"></A><H3>ORIGINAL_SOURCEID</H3><PRE>constant string&nbsp;<B>ORIGINAL_SOURCEID := \"originalSourceId\"</B></PRE>This constant defines the configuration parameter name of the originator <font face=\"courier\" size=\"-1\">sourceId</font> that will be cached in the output Data events that are generated by this Analytic.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Flow Manipulation",
            "inputChannels": [
                {
                    "description": "The channels to combine",
                    "name": "Data",
                    "repeated": true
                }
            ],
            "name": "Combiner",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+params"
                    ],
                    "description": "The combined data channel",
                    "name": "Combined"
                }
            ],
            "properties": [
                {
                    "description": "Modify all data events to use this sourceId",
                    "name": "aggregatedSourceId",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.length > 0 | 'Must not be empty' }"
                }
            ]
        },
        {
            "description": "Duplicate an input stream to multiple output streams.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.flow_manipulation</FONT><BR>Duplicator</H2><HR>The Duplicator Analytic takes one input channel, and then duplicates the unmodified event received onto one or more output channels.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>One or more output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Duplicator Analytic which takes Data events on the channel \"Input1\" <br>// and publishes a copy of the Data event onto two output channels (\"Output1\" and \"Output2\")<br>send com.industry.analytics.Analytic(\"Duplicator\", [\"Input1\"], [\"Output1\",\"Output2\"], new dictionary&ltstring,string&gt ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Duplicator\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Duplicator\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Flow Manipulation",
            "inputChannels": [
                {
                    "description": "The channel to duplicate",
                    "name": "Data"
                }
            ],
            "name": "Duplicator",
            "outputChannels": [
                {
                    "description": "A duplicated data channel",
                    "name": "Duplicated",
                    "repeated": true
                }
            ]
        },
        {
            "description": "Calculates the rate of events recieved (events/second).",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.flow_manipulation</FONT><BR>EventRate</H2><HR>The EventRate Analytic outputs the rate of arrival of events on the specified input channel. This rate can be derived based on either the correlator time or on the timestamps of the <font face=\"courier\" size=\"-1\">Data</font> events.<br><br> The calculated event rate is published at a rate defined by the <font face=\"courier\" size=\"-1\">publishRate</font> parameter.  If a value of <font face=\"courier\" size=\"-1\">0.0d</font> is provided, then the calculation is sent everytime an input event is received.  In the correlator time mode, a wait listener is setup to ensure an event rate is output even when no input Data events are received. This is not possible for the timestamp mode, as time is being driven entirely by the timestamp of the Data events received. If the <font face=\"courier\" size=\"-1\">bySourceId</font> parameter is set to <font face=\"courier\" size=\"-1\">true</font>, then the listener will be enabled AFTER the first <font face=\"courier\" size=\"-1\">Data</font> event is received for the new <font face=\"courier\" size=\"-1\">sourceId</font>. This means that if no input events are received, no output events will be sent.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. As this analytic is generating new data, not dependent on the values of the incoming Data events, no params are copied from the incoming events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>useCorrelatorTime</b></td><td>Defines whether to use the Correlator time or alternatively use the events timestamp</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">false</font></td></tr> <tr><td><b>smoothingFactor</b></td><td>Defines the number of events over which to calculate/smooth the event rate calculation.</td> <td>>= 2</td><td>Integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">3</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Event Rate calculations are partitioned based on the <font face=\"courier\" size=\"-1\">sourceId</font> parameter of the input data stream</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> <tr><td><b>publishRate</b></td><td>Defines the rate at which the Event Rate calculations are published on the output channel per-sourceId. A value of <font face=\"courier\" size=\"-1\">0.0d</font> indicates that the calculation is published for each event received.</td> <td>>=0.0d</td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">1.0d</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a EventRate Analytic which takes Data events on the channel \"Input1\"  <br>// and calculates the rate at which events are being received on that channel<br>// based on the Data events timestamp and publishes an event on the \"Output1\" channel. <br>send com.industry.analytics.Analytic(\"EventRate\", [\"Input1\"], [\"Output1\"], new dictionary&ltstring,string&gt ) to \"\";<br><br>// Define a EventRate Analytic which takes Data events on the channel \"Input1\"  <br>// and calculates the rate at which events are being received on that channel <br>// based on the Correlator time and the last 10events and publishes an event <br>// on the \"Output1\" channel. <br>send com.industry.analytics.Analytic(\"EventRate\", [\"Input1\"], [\"Output1\"], {\"useCorrelatorTime\":\"true\", \"smoothingFactor\":\"10\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"import_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Import Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;TimeFormatPlugin</CODE></FONT></TD><TD><CODE><B><A >timeFormat</A></B></CODE><br></TD></TR></TABLE>&nbsp;<A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the Event Rate calculation will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"EventRate\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >PUBLISH_RATE</A> := \"publishRate\"</B></CODE><br><br>This constant defines the configuration parameter name that indicates what the time between publishing the event rates.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SMOOTHING_FACTOR</A> := \"smoothingFactor\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the number of events that the rate is calculated over.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >USE_CORRELATOR_TIME</A> := \"useCorrelatorTime\"</B></CODE><br><br>This constant defines the configuration parameter name that indicates what timestamp mode should be used. By default, the timestamp of the event is used instead of the Correlator time.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"import_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Import Detail</B></FONT></TH></TR></TABLE><A NAME=\"timeFormat\"></A><H3>timeFormat</H3><PRE>TimeFormatPlugin&nbsp;<B>timeFormat</B></PRE><HR><A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the Event Rate calculation will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"EventRate\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"PUBLISH_RATE\"></A><H3>PUBLISH_RATE</H3><PRE>constant string&nbsp;<B>PUBLISH_RATE := \"publishRate\"</B></PRE>This constant defines the configuration parameter name that indicates what the time between publishing the event rates.<HR><A NAME=\"SMOOTHING_FACTOR\"></A><H3>SMOOTHING_FACTOR</H3><PRE>constant string&nbsp;<B>SMOOTHING_FACTOR := \"smoothingFactor\"</B></PRE>This constant defines the configuration parameter name that defines the number of events that the rate is calculated over.<HR><A NAME=\"USE_CORRELATOR_TIME\"></A><H3>USE_CORRELATOR_TIME</H3><PRE>constant string&nbsp;<B>USE_CORRELATOR_TIME := \"useCorrelatorTime\"</B></PRE>This constant defines the configuration parameter name that indicates what timestamp mode should be used. By default, the timestamp of the event is used instead of the Correlator time.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Flow Manipulation",
            "inputChannels": [
                {
                    "description": "The channel for which to calculate the event rate",
                    "name": "Data"
                }
            ],
            "name": "EventRate",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue"
                    ],
                    "description": "The event rate (events/second)",
                    "name": "Event Rate"
                }
            ],
            "properties": [
                {
                    "defaultValue": false,
                    "description": "Defines whether to use the Correlator time or alternatively use the events timestamp",
                    "name": "useCorrelatorTime",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": 3,
                    "description": "Defines the number of events over which to calculate/smooth the event rate calculation",
                    "name": "smoothingFactor",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 2 || 'Value must be greater than or equal to 2' }"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "If defined, the Event Rate calculations are partitioned based on the sourceId parameter of the input data stream",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": 1.0,
                    "description": "Defines the period between which the event rates are published. If the value is zero, the calculation is published for every incoming event.",
                    "name": "publishRate",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0.0 || 'Value must be greater than or equal to 0.0' }"
                }
            ]
        },
        {
            "description": "Filter events by a condition.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.flow_manipulation</FONT><BR>Filter</H2><HR>The Filter Analytic filters the Data events passed through it based on the configuration parameters given below. Appropriate use of the <font face=\"courier\" size=\"-1\">sValue</font> filters can create a stream with just float values or just string values if desired.<br><br> <b>Note:</b> When using the <font face=\"courier\" size=\"-1\">sourceId_OnlyLeafNodes</font> or <font face=\"courier\" size=\"-1\">sourceId_AllChildren</font> filters, applications must first define the relationships/grouping of DataSources using the com.industry.analytics.DataSource event.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream channel name must be provided. All the <font face=\"courier\" size=\"-1\">params</font> from the input Data are copied to the filtered <font face=\"courier\" size=\"-1\">Data</font> event.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream channel name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>sourceId</b></td><td>If defined, only Data events which have a <font face=\"courier\" size=\"-1\">sourceId</font> that matches at least ONE of the set of defined sourceIds are allowed through. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">sourceId</font> and the <font face=\"courier\" size=\"-1\">!sourceId</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>!sourceId</b></td><td>If defined, Data events which have a <font face=\"courier\" size=\"-1\">sourceId</font> that matches matches ANY of the set of defined sourceIds are NOT allowed through. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">sourceId</font> and the <font face=\"courier\" size=\"-1\">!sourceId</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>hasParam</b></td><td>If defined, only Data events which have a <font face=\"courier\" size=\"-1\">param</font> that matches at least ONE of the set of defined <font face=\"courier\" size=\"-1\">hasParam</font> values are allowed through. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">hasParam</font> and the <font face=\"courier\" size=\"-1\">!hasParam</font> configuration parameter, then the Data event WILL be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of params to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>!hasParam</b></td><td>If defined, only Data events which have a <font face=\"courier\" size=\"-1\">param</font> that matches ANY of the set of defined <font face=\"courier\" size=\"-1\">!hasParam</font> values are NOT allowed through. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">hasParam</font> and the <font face=\"courier\" size=\"-1\">!hasParam</font> configuration parameter, then the Data event WILL be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of params to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>sValue</b></td><td>If defined, only Data events which have a <font face=\"courier\" size=\"-1\">sValue</font> that matches at least ONE of the set of defined string values are allowed through. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">sValue</font> and the <font face=\"courier\" size=\"-1\">!sValue</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of sValues to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>!sValue</b></td><td>If defined, only Data events which have a <font face=\"courier\" size=\"-1\">sValue</font> that matches ANY of the set of defined string values are NOT allowed through. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">sValue</font> and the <font face=\"courier\" size=\"-1\">!sValue</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of sValues to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>type</b></td><td>If defined, only Data events which have a <font face=\"courier\" size=\"-1\">type</font> that matches at least ONE of \"r\" Raw , \"c\" Computed, or \"a\" Anomaly. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">type</font> and the <font face=\"courier\" size=\"-1\">!type</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of Types to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>!type</b></td><td>If defined, only Data events which have a <font face=\"courier\" size=\"-1\">type</font> that matches ANY of \"r\" Raw , \"c\" Computed, or \"a\" Anomaly are NOT allowed through. A stringified empty sequence is treated as \"allow any value\".<br><br> <b>Note:</b> If the same value appears in both the <font face=\"courier\" size=\"-1\">type</font> and the <font face=\"courier\" size=\"-1\">!type</font> configuration parameter, then the Data event WILL NOT be filtered.</td> <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of Types to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>sourceId_OnlyLeafNodes</b></td><td>If defined, only Data events which have an <font face=\"courier\" size=\"-1\">sourceId</font> which is a leaf node DataSource below the specified DataSource Id in the hierarchy will be allowed through A stringified empty sequence is treated as \"allow any value\". <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>sourceId_AllChildren</b></td><td>If defined, only Data events which have an <font face=\"courier\" size=\"-1\">sourceId</font> which is a child DataSource that is has the specified DataSource Id as a parent ancestor in the hierarchy will be allowed through. A stringified empty sequence is treated as \"allow any value\". <td>Empty string, or a stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font> containing the set of sourceIds to filter on</td> <td>Stringified <font face=\"courier\" size=\"-1\">sequence&ltstring&gt</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"[]\"</font></td></tr> <tr><td><b>dValue<br>xValue<br>yValue<br>zValue</b></td> <td>For each of the numeric members of the Data event a filter condition can be specified. The operator always comes first, followed by one or two bounding values. If two values are requires they can be separated by a space or comma.<br> <font face=\"courier\" size=\"-1\">&lt; X</font>  less than<br> <font face=\"courier\" size=\"-1\">&lt;= X</font>  less than or equal<br> <font face=\"courier\" size=\"-1\">= X</font>  equals<br> <font face=\"courier\" size=\"-1\">&gt;= X</font>  greater than or equal<br> <font face=\"courier\" size=\"-1\">&gt; X</font>  greater than<br> <font face=\"courier\" size=\"-1\">&gt;&lt; X Y</font>  between<br> <font face=\"courier\" size=\"-1\">&gt;=&lt; X Y</font>  between inclusive<br> <font face=\"courier\" size=\"-1\">&lt;&gt; X Y</font>  without<br> <font face=\"courier\" size=\"-1\">&lt;=&gt; X Y</font>  without inclusive <td>Non-empty string containing condition.</td> <td>String</td><td>False</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Filter Analytic which takes Data events on the channel \"Input1\"  <br>// and filters out any Data events from the data source \"MySensor\" that are not <br>// anomalies (IE just filter raw and computed values).<br>send com.industry.analytics.Analytic(\"Filter\", [\"Input1\"], [\"Output1\"], {\"sourceId\":\"MySensor\",\"!type\":DataConstants.ANOMALY } ) to \"\";<br><br>// Define a Filter Analytic which takes Data events on the channel \"Input1\"  <br>// and filters out any Data events except those which have a dValue parameter <br>// of between 15.0 and 30.0.<br>send com.industry.analytics.Analytic(\"Filter\", [\"Input1\"], [\"Output1\"], {\"dValue\":\">< 15.0, 30.0\"} ) to \"\";<br></pre></dd> </dl><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.DataSource</A>&nbsp;-&nbsp;The DataSource event that is used to define groups of DataSources. This is required if using the <font face=\"courier\" size=\"-1\">sourceId_AllChildren</font> or <font face=\"courier\" size=\"-1\">sourceId_OnlyLeafNodes</font> filters.</DD></DL><DL><DT><B>Sends:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.SourceIdsRequest</A>&nbsp;-&nbsp;</DD></DL><DL><DT><B>Listens:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.SourceIdsResponse</A>&nbsp;-&nbsp;</DD></DL><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >HASPARAM</A> := \"hasParam\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">params</font> parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Filter\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NOT_HASPARAM</A> := \"!hasParam\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">params</font> parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NOT_SOURCEID</A> := \"!sourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NOT_SVALUE</A> := \"!sValue\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">sValue</font> parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NOT_TYPE</A> := \"!type\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">type</font> parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SOURCEID</A> := \"sourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SOURCEID_ALLCHILDREN</A> := \"sourceId_AllChildren\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering where the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter is a node in the hierarchical tree of DataSources associated with the parent sourceId defined by this parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SOURCEID_ONLYLEAFNODES</A> := \"sourceId_OnlyLeafNodes\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering where the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter is a terminating leaf node in the hierarchical tree of DataSources (IE it has no associated child DataSources) associated with the parent sourceId defined by this parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SVALUE</A> := \"sValue\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">sValue</font> parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TYPE</A> := \"type\"</B></CODE><br><br>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">type</font> parameter</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"HASPARAM\"></A><H3>HASPARAM</H3><PRE>constant string&nbsp;<B>HASPARAM := \"hasParam\"</B></PRE>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">params</font> parameter<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Filter\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"NOT_HASPARAM\"></A><H3>NOT_HASPARAM</H3><PRE>constant string&nbsp;<B>NOT_HASPARAM := \"!hasParam\"</B></PRE>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">params</font> parameter<HR><A NAME=\"NOT_SOURCEID\"></A><H3>NOT_SOURCEID</H3><PRE>constant string&nbsp;<B>NOT_SOURCEID := \"!sourceId\"</B></PRE>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter<HR><A NAME=\"NOT_SVALUE\"></A><H3>NOT_SVALUE</H3><PRE>constant string&nbsp;<B>NOT_SVALUE := \"!sValue\"</B></PRE>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">sValue</font> parameter<HR><A NAME=\"NOT_TYPE\"></A><H3>NOT_TYPE</H3><PRE>constant string&nbsp;<B>NOT_TYPE := \"!type\"</B></PRE>This constant defines the configuration parameter name that allows filtering by not having the Data events <font face=\"courier\" size=\"-1\">type</font> parameter<HR><A NAME=\"SOURCEID\"></A><H3>SOURCEID</H3><PRE>constant string&nbsp;<B>SOURCEID := \"sourceId\"</B></PRE>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter<HR><A NAME=\"SOURCEID_ALLCHILDREN\"></A><H3>SOURCEID_ALLCHILDREN</H3><PRE>constant string&nbsp;<B>SOURCEID_ALLCHILDREN := \"sourceId_AllChildren\"</B></PRE>This constant defines the configuration parameter name that allows filtering where the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter is a node in the hierarchical tree of DataSources associated with the parent sourceId defined by this parameter<HR><A NAME=\"SOURCEID_ONLYLEAFNODES\"></A><H3>SOURCEID_ONLYLEAFNODES</H3><PRE>constant string&nbsp;<B>SOURCEID_ONLYLEAFNODES := \"sourceId_OnlyLeafNodes\"</B></PRE>This constant defines the configuration parameter name that allows filtering where the Data events <font face=\"courier\" size=\"-1\">sourceId</font> parameter is a terminating leaf node in the hierarchical tree of DataSources (IE it has no associated child DataSources) associated with the parent sourceId defined by this parameter<HR><A NAME=\"SVALUE\"></A><H3>SVALUE</H3><PRE>constant string&nbsp;<B>SVALUE := \"sValue\"</B></PRE>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">sValue</font> parameter<HR><A NAME=\"TYPE\"></A><H3>TYPE</H3><PRE>constant string&nbsp;<B>TYPE := \"type\"</B></PRE>This constant defines the configuration parameter name that allows filtering by the Data events <font face=\"courier\" size=\"-1\">type</font> parameter<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Flow Manipulation",
            "inputChannels": [
                {
                    "description": "The channel to filter",
                    "name": "Data"
                }
            ],
            "name": "Filter",
            "outputChannels": [
                {
                    "description": "The channel on which to output filtered data",
                    "name": "Filtered"
                }
            ],
            "properties": [
                {
                    "description": "Event must have any of these sourceIds. eg. [\"sourceId1\"]",
                    "name": "sourceId",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "description": "Event must not have any of these sourceIds. eg. [\"sourceId1\"]",
                    "name": "!sourceId",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "description": "Event must have any of these params. eg. [\"param1\"]",
                    "name": "hasParam",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "description": "Event must not have any of these params. eg. [\"param1\"]",
                    "name": "!hasParam",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "description": "Event must have any of these string values. eg. [\"abc\"]",
                    "name": "sValue",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "description": "Event must not have any of these string values. eg. [\"abc\"]",
                    "name": "!sValue",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "description": "Event must have any of these types. (Raw, Computed, Anomaly) eg. [\"r\", \"c\", \"a\"]",
                    "name": "type",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[rca]\",)*(\"[rca]\"))?\\]$/g) || 'Value must be a stringified sequence of r (Raw), c (Computed), or a (Anomaly) eg. [\"r\"]' }"
                },
                {
                    "description": "Event must not have any of these types. (Raw, Computed, Anomaly) eg. [\"r\", \"c\", \"a\"]",
                    "name": "!type",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[rca]\",)*(\"[rca]\"))?\\]$/g) || 'Value must be a stringified sequence of r (Raw), c (Computed), or a (Anomaly) eg. [\"r\"]' }"
                },
                {
                    "advanced": true,
                    "description": "Check that the event's sourceId is a leaf node (in the DataSource hierarchy) of one of these dataSources. Eg. [\"ParentSource1\"]",
                    "name": "sourceId_OnlyLeafNodes",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "advanced": true,
                    "description": "Check that the event's sourceId is a child or nested child (in the DataSource hierarchy) of one of these dataSources. Eg. [\"ParentSource1\"]",
                    "name": "sourceId_AllChildren",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[((\"[^\"]*\",)*(\"[^\"]*\"))?\\]$/g) || 'Value must be a stringified sequence eg. [\"abc\"]' }"
                },
                {
                    "description": "Check that the event's dValue meets a condition. Eg. '> 5.0'",
                    "name": "dValue",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^(((<|>)=?|=)( +\\d+(\\.\\d+)?)|(<=?>|>=?<) +\\d+(\\.\\d+)?( +| *, *)\\d+(\\.\\d+)?)$/g) || 'Value must be a valid condition eg. >= 5.0' }"
                },
                {
                    "advanced": true,
                    "description": "Check that the event's xValue meets a condition. Eg. '> 5.0'",
                    "name": "xValue",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^(((<|>)=?|=)( +\\d+(\\.\\d+)?)|(<=?>|>=?<) +\\d+(\\.\\d+)?( +| *, *)\\d+(\\.\\d+)?)$/g) || 'Value must be a valid condition eg. >= 5.0' }"
                },
                {
                    "advanced": true,
                    "description": "Check that the event's yValue meets a condition. Eg. '> 5.0'",
                    "name": "yValue",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^(((<|>)=?|=)( +\\d+(\\.\\d+)?)|(<=?>|>=?<) +\\d+(\\.\\d+)?( +| *, *)\\d+(\\.\\d+)?)$/g) || 'Value must be a valid condition eg. >= 5.0' }"
                },
                {
                    "advanced": true,
                    "description": "Check that the event's zValue meets a condition. Eg. '> 5.0'",
                    "name": "zValue",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^(((<|>)=?|=)( +\\d+(\\.\\d+)?)|(<=?>|>=?<) +\\d+(\\.\\d+)?( +| *, *)\\d+(\\.\\d+)?)$/g) || 'Value must be a valid condition eg. >= 5.0' }"
                }
            ]
        },
        {
            "description": "Slices input data by count or size.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.flow_manipulation</FONT><BR>Slicer</H2><HR>The Slicer Analytic generates a set of 'X' new Data events for each incoming event, at 'Y' seconds apart and with value 'Z'. The value of 'Z' is defined by the behavior. The new events are generated every 'Y' seconds.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Computed type are generated.  All the <font face=\"courier\" size=\"-1\">params</font> from the input Data are copied to the computed Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>sliceType</b></td><td>Defines the behaviour of the Slicer analytic. Its value can be either <font face=\"courier\" size=\"-1\">sliceSize</font> or <font face=\"courier\" size=\"-1\">sliceCount</font>.</td> <td>String</td><td>String</td><td>True</td><td> </td></tr> <tr><td><b>sliceValue</b></td><td>Defines the value of selected behaviour.</td> <td>Stringified decimal</td><td>Decimal</td><td>True</td><td> </td></tr> <tr><td><b>timeInterval</b></td><td>Defines the time to send each sliced event number of \"seconds\" apart.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">0.0d</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>//Define a Slicer Analytic which takes Data events on the channel \"Input\"  <br>//and generates a set of 10 Data events with value equally sliced. It publishes<br>//a Data event with the calculated value on the output channel \"Output\" every 1 second apart.   <br>send com.industry.analytics.Analytic(\"Slicer\", [\"Input\"], [\"Output\"], {\"sliceType\":\"sliceCount\", \"sliceValue\":\"10.0\",  \"timeInterval\":\"1.0\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Slicer\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SLICE_TYPE</A> := \"sliceType\"</B></CODE><br><br>This constant defines the behaviour of the Slicer analytic. The value can be 'sliceSize' or 'sliceCount'</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SLICE_VALUE</A> := \"sliceValue\"</B></CODE><br><br>This constant defines the value of selected slicer behaviour.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIME_INTERVAL</A> := \"timeInterval\"</B></CODE><br><br>This constant defines Time to send each sliced event number of \"seconds\" apart</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >processData</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Data</A>&nbsp;dataIn)</CODE><br></TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Slicer\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"SLICE_TYPE\"></A><H3>SLICE_TYPE</H3><PRE>constant string&nbsp;<B>SLICE_TYPE := \"sliceType\"</B></PRE>This constant defines the behaviour of the Slicer analytic. The value can be 'sliceSize' or 'sliceCount'<HR><A NAME=\"SLICE_VALUE\"></A><H3>SLICE_VALUE</H3><PRE>constant string&nbsp;<B>SLICE_VALUE := \"sliceValue\"</B></PRE>This constant defines the value of selected slicer behaviour.<HR><A NAME=\"TIME_INTERVAL\"></A><H3>TIME_INTERVAL</H3><PRE>constant string&nbsp;<B>TIME_INTERVAL := \"timeInterval\"</B></PRE>This constant defines Time to send each sliced event number of \"seconds\" apart<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL><HR><A NAME=\"processData()\"></A><H3>processData</H3><PRE>void&nbsp;<B>processData</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Data</A>&nbsp;dataIn)</PRE><DL><DT><B>Parameters:</B></DT><DD><tt>dataIn</tt></DD></DL>",
            "group": "Flow Manipulation",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel to slice",
                    "name": "Data"
                }
            ],
            "name": "Slicer",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue",
                        "+params"
                    ],
                    "description": "The channel to output slices",
                    "name": "Slices"
                }
            ],
            "properties": [
                {
                    "description": "Defines the behaviour of the Slicer analytic.",
                    "name": "sliceType",
                    "optional": false,
                    "type": "string",
                    "validValues": [
                        "sliceSize",
                        "sliceCount"
                    ]
                },
                {
                    "description": "Defines the value of selected behaviour.",
                    "name": "sliceValue",
                    "optional": false,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Must be greater than 0' }"
                },
                {
                    "defaultValue": 0,
                    "description": "Defines the time in seconds between sending each sliced event",
                    "name": "timeInterval",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Must be greater than or equal to 0' }"
                }
            ]
        },
        {
            "description": "Sort incoming events by their timestamp.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.flow_manipulation</FONT><BR>Sorter</H2><HR>In a general use case the event ordering cannot be guaranteed. This may be because the events are batched in some way for different devices or network delays. For example, where vehicles take data readings every 5 minutes but only return the results as a batch every hour.<br><br> The Sorter Analytic will receive multiple Data events of different names and store them into a single ordered sequence sorted by the originating timestamp. It will then dispatch the oldest stored values after a minimum (held) time period. The result is a single combined stream of Data events that will be delayed by a minimum period.  This delay will allow for late or out-of-order events to be correctly ordered.<br><br> We cannot use the internal Correlator timers as incoming data will be heavily clustered, so we need to use the event timestamp values: <ol> <li>Receive a new Data; insert into sequence ordered by timestamp value within the event.</li> <li>Time period between the newly received timestamp value and the oldest timestamp in the sequence compared; if that event has been stored for more than the minimum period then dispatch it and remove from the sequence; then look at the next oldest and repeat until no events have been held for the minimum period.</li> <li>We may not get a new event before we need to dispatch the next output event and we can't rely on correlator time; so we:</li> <ol type=\"a\"><li>Calculate a timeout period as 10% of the minimum hold period (e.g. t_out := min * 0.1;).</li> <li>Set an on wait timer for this calculated period.</li> <li>If we get a new incoming Data event before the timer triggers the timer is torn down and re-added in the cycle of the new event.</li> <li>If the timer triggers then our new time is the timestamp of the last received event plus the calculated timeout period (e.g. newtime := sequence[0].timestamp + t_out).</li> <li>We then use this to try to flush the sequence. We then create a new timeout and go to step 3 and repeat.</li> </ol></ol> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream channel name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream channel name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window in which to sort Data events</td> <td>Stringified decimal <font face=\"courier\" size=\"-1\">>0.0d</font></td><td>Decimal</td><td>True</td><td></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Sorter Analytic which takes Data events on the channel \"Input1\"  <br>// and stores the values in a 10.0 second time window before republishing them <br>// ordered by the events timestamp parameter.<br>send com.industry.analytics.Analytic(\"Sorter\", [\"Input1\"], [\"Output1\"], {\"timeWindow\":\"10.0\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Sorter\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIMEWINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be sorted within</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Sorter\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"TIMEWINDOW\"></A><H3>TIMEWINDOW</H3><PRE>constant string&nbsp;<B>TIMEWINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be sorted within<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Flow Manipulation",
            "inputChannels": [
                {
                    "description": "The channel to sort",
                    "name": "Data"
                }
            ],
            "name": "Sorter",
            "outputChannels": [
                {
                    "description": "Sorted data channel",
                    "name": "Sorted"
                }
            ],
            "properties": [
                {
                    "description": "How long to delay events, allowing them to be sorted.",
                    "name": "timeWindow",
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Must be greater than 0' }"
                }
            ]
        },
        {
            "description": "Suppress events after a triggering event.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.flow_manipulation</FONT><BR>Suppressor</H2><HR>The Suppressor Analytic will suppress events from the defined input stream from appearing on the output stream name for a set duration following a trigger event. The trigger event will be passed through regardless allowing the prevention of repeated warnings, for example.<br><br> The trigger event is based upon a defined parameter, the events acted upon may use the same parameter or another. It is also possible to reset the suppressing by the use of an event with a different parameter. It is also possible to independently set whether suppressing should happen just for the source in the trigger event or for all sources received, and whether a reset should just apply to its source or reset all sources being actioned. It is also possible to set whether a new trigger event received before the end of a suppressing window should restart the duration timer or just be ignored.<br><br> A special case exists for the parameters below. If the parameter value <font face=\"courier\" size=\"-1\">\"type\"</font> is used, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the param value is mandatory and must be one of <font face=\"courier\" size=\"-1\">'r', 'c' or 'a'</font> (raw, computed or anomaly).<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.  All the <font face=\"courier\" size=\"-1\">params</font> from the input Data are copied to the unsuppressed Data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window in seconds in which to suppress events over</td> <td>Stringified decimal <font face=\"courier\" size=\"-1\">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">60.0d\"</font></td></tr> <tr><td><b>triggerParam</b></td><td>Defines the parameter name at which to start suppressing events on. The <font face=\"courier\" size=\"-1\">triggerParamValue</font> parameter can also be used to trigger on a specific parameter value. If the value is set to <font face=\"courier\" size=\"-1\">\"type\"</font>, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the <font face=\"courier\" size=\"-1\">triggerParamValue</font> value is mandatory and must be one of <font face=\"courier\" size=\"-1\">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td>Non-empty string value</td><td>String</td><td>True</td><td></td></tr> <tr><td><b>triggerParamValue</b></td><td>Defines a specific value for the <font face=\"courier\" size=\"-1\">triggerParam</font> before starting to suppress events. If this configuration parameter was not defined or an empty string is provided, then any values for the <font face=\"courier\" size=\"-1\">triggerParam</font> will trigger suppressing to start. If the <font face=\"courier\" size=\"-1\">triggerParam</font> value is set to <font face=\"courier\" size=\"-1\">\"type\"</font>, this parameter is mandatory and must be one of <font face=\"courier\" size=\"-1\">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">\"\"</font></td></tr> <tr><td><b>triggerExtension</b></td><td>Defines whether or not the time window will be reset following a new trigger match</td> <td></td><td><font face=\"courier\" size=\"-1\">\"true\"</font> or <font face=\"courier\" size=\"-1\">\"false\"</font></td><td>False</td><td><font face=\"courier\" size=\"-1\">\"false\"</font></td></tr> <tr><td><b>actionParam</b></td><td>Defines the parameter name which will cause the Data event to be suppressed once a trigger has been received. The <font face=\"courier\" size=\"-1\">actionParamValue</font> parameter to trigger on a specific parameter value. If the value is set to <font face=\"courier\" size=\"-1\">\"type\"</font>, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the <font face=\"courier\" size=\"-1\">actionParamValue</font> value is mandatory and must be one of <font face=\"courier\" size=\"-1\">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td>The <font face=\"courier\" size=\"-1\">triggerParam</font></td></tr> <tr><td><b>actionParamValue</b></td><td>Defines a specific value for the <font face=\"courier\" size=\"-1\">actionParam</font> before suppressing events. If this configuration parameter was not defined or an empty string is provided, then any values for the <font face=\"courier\" size=\"-1\">actionParam</font> will trigger suppressing to start. If the <font face=\"courier\" size=\"-1\">actionParam</font> value is set to <font face=\"courier\" size=\"-1\">\"type\"</font>, this parameter is mandatory and must be one of <font face=\"courier\" size=\"-1\">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">\"\"</font></td></tr> <tr><td><b>resetParam</b></td><td>Defines the parameter name which will cause the trigger Suppressor to be reset. The <font face=\"courier\" size=\"-1\">resetParamValue</font> parameter can also be used to reset the trigger on a specific parameter value. If this parameter is not defined, the trigger will never be reset. If the value is set to <font face=\"courier\" size=\"-1\">\"type\"</font>, then the Suppressor will look at the type member of the Data event instead of the params dictionary. In this case the <font face=\"courier\" size=\"-1\">resetParamValue</font> value is mandatory and must be one of <font face=\"courier\" size=\"-1\">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td>\"\"</td></tr> <tr><td><b>resetParamValue</b></td><td>Defines a specific value for the <font face=\"courier\" size=\"-1\">resetParam</font> before resetting the trigger. If the <font face=\"courier\" size=\"-1\">resetParam</font> value is set to <font face=\"courier\" size=\"-1\">\"type\"</font>, this parameter is mandatory and must be one of <font face=\"courier\" size=\"-1\">'r', 'c' or 'a'</font> (raw, computed or anomaly).</td> <td></td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">\"\"</font></td></tr> <tr><td><b>bySourceId</b></td><td>f defined, the suppression of Data events is partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font> parameter of the input data stream</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Suppressor Analytic which takes Data events on the channel \"Input1\"  <br>// and prevents any \"Computed\" types of Data events from being published onto <br>// the output channel \"Output1\" within a 20.0 second time window. For example,<br>// if you only want to publish periodic updates from a data source.<br>send com.industry.analytics.Analytic(\"Suppressor\", [\"Input1\"], [\"Output1\"], { \"timeWindow\":\"20.0d\",\"triggerParam\":\"type\",\"triggerParamValue\":DataConstants.COMPUTED } ) to \"\";<br><br>// Define a Suppressor Analytic which takes Data events on the channel \"Input1\"  <br>// and waits until it receives a Data event with the parameter \"isTestingEnabled\"<br>// set to a value of \"true\". Once the Analytic has triggered, it prevents any <br>// \"Computed\" types of Data events from being published onto the output channel <br>// \"Output1\" within a 20.0 second time window.  For example, if you want to <br>// ignore any events being published while a device is in a \"test mode\".<br>send com.industry.analytics.Analytic(\"Suppressor\", [\"Input1\"], [\"Output1\"], { \"timeWindow\":\"20.0d\",\"triggerParam\":\"isTestingEnabled\",\"triggerParamValue\":\"true\",<br>                                                                               \"actionParam\":\"type\", \"actionParamValue\":DataConstants.COMPUTED } ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ACTION_PARAM</A> := \"actionParam\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the action parameter name. This can be used in conjunction with the <font face=\"courier\" size=\"-1\">actionParamValue</font> configuration parameter to refine the action condition.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ACTION_PARAM_VALUE</A> := \"actionParamValue\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the action parameter value. This is used in conjunction with the <font face=\"courier\" size=\"-1\">actionParam</font> configuration parameter to refine the action condition.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the suppression of Data events is partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Suppressor\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >RESET_PARAM</A> := \"resetParam\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the trigger reset parameter name. This can be used in conjunction with the <font face=\"courier\" size=\"-1\">resetParamValue</font> configuration parameter to refine the trigger reset condition.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >RESET_PARAM_VALUE</A> := \"resetParamValue\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the trigger reset parameter value. This is used in conjunction with the <font face=\"courier\" size=\"-1\">resetParam</font> configuration parameter to refine the trigger reset condition.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIMEWINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be suppressed for once triggered.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TRIGGER_EXTENSION</A> := \"triggerExtension\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the whether or not the trigger time out will be reset following a new trigger match.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TRIGGER_PARAM</A> := \"triggerParam\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the suppressing trigger parameter name. This can be used in conjunction with the <font face=\"courier\" size=\"-1\">triggerParamValue</font> configuration parameter to refine the trigger condition.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TRIGGER_PARAM_VALUE</A> := \"triggerParamValue\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the suppressing trigger parameter value. This is used in conjunction with the <font face=\"courier\" size=\"-1\">triggerParam</font> configuration parameter.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TYPE</A> := \"type\"</B></CODE><br><br>This constant defines the special case parameter name which refers to the Data event type field.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"ACTION_PARAM\"></A><H3>ACTION_PARAM</H3><PRE>constant string&nbsp;<B>ACTION_PARAM := \"actionParam\"</B></PRE>This constant defines the configuration parameter name that specifies the action parameter name. This can be used in conjunction with the <font face=\"courier\" size=\"-1\">actionParamValue</font> configuration parameter to refine the action condition.<HR><A NAME=\"ACTION_PARAM_VALUE\"></A><H3>ACTION_PARAM_VALUE</H3><PRE>constant string&nbsp;<B>ACTION_PARAM_VALUE := \"actionParamValue\"</B></PRE>This constant defines the configuration parameter name that specifies the action parameter value. This is used in conjunction with the <font face=\"courier\" size=\"-1\">actionParam</font> configuration parameter to refine the action condition.<HR><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the suppression of Data events is partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Suppressor\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"RESET_PARAM\"></A><H3>RESET_PARAM</H3><PRE>constant string&nbsp;<B>RESET_PARAM := \"resetParam\"</B></PRE>This constant defines the configuration parameter name that specifies the trigger reset parameter name. This can be used in conjunction with the <font face=\"courier\" size=\"-1\">resetParamValue</font> configuration parameter to refine the trigger reset condition.<HR><A NAME=\"RESET_PARAM_VALUE\"></A><H3>RESET_PARAM_VALUE</H3><PRE>constant string&nbsp;<B>RESET_PARAM_VALUE := \"resetParamValue\"</B></PRE>This constant defines the configuration parameter name that specifies the trigger reset parameter value. This is used in conjunction with the <font face=\"courier\" size=\"-1\">resetParam</font> configuration parameter to refine the trigger reset condition.<HR><A NAME=\"TIMEWINDOW\"></A><H3>TIMEWINDOW</H3><PRE>constant string&nbsp;<B>TIMEWINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name that specifies the time window (in seconds) that the events will be suppressed for once triggered.<HR><A NAME=\"TRIGGER_EXTENSION\"></A><H3>TRIGGER_EXTENSION</H3><PRE>constant string&nbsp;<B>TRIGGER_EXTENSION := \"triggerExtension\"</B></PRE>This constant defines the configuration parameter name that specifies the whether or not the trigger time out will be reset following a new trigger match.<HR><A NAME=\"TRIGGER_PARAM\"></A><H3>TRIGGER_PARAM</H3><PRE>constant string&nbsp;<B>TRIGGER_PARAM := \"triggerParam\"</B></PRE>This constant defines the configuration parameter name that specifies the suppressing trigger parameter name. This can be used in conjunction with the <font face=\"courier\" size=\"-1\">triggerParamValue</font> configuration parameter to refine the trigger condition.<HR><A NAME=\"TRIGGER_PARAM_VALUE\"></A><H3>TRIGGER_PARAM_VALUE</H3><PRE>constant string&nbsp;<B>TRIGGER_PARAM_VALUE := \"triggerParamValue\"</B></PRE>This constant defines the configuration parameter name that specifies the suppressing trigger parameter value. This is used in conjunction with the <font face=\"courier\" size=\"-1\">triggerParam</font> configuration parameter.<HR><A NAME=\"TYPE\"></A><H3>TYPE</H3><PRE>constant string&nbsp;<B>TYPE := \"type\"</B></PRE>This constant defines the special case parameter name which refers to the Data event type field.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Flow Manipulation",
            "inputChannels": [
                {
                    "dataProperties": [
                        "params"
                    ],
                    "description": "The channel to suppress",
                    "name": "Data"
                }
            ],
            "name": "Suppressor",
            "outputChannels": [
                {
                    "description": "Suppressed data channel",
                    "name": "Suppressed"
                }
            ],
            "properties": [
                {
                    "defaultValue": 60.0,
                    "description": "How long to suppress events for.",
                    "name": "timeWindow",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Must be greater than 0' }"
                },
                {
                    "description": "A param to identify when to start suppressing the output events.",
                    "name": "triggerParam",
                    "type": "string",
                    "validator": "function(value) { return value.length > 0 || 'Must have a value' }"
                },
                {
                    "defaultValue": "",
                    "description": "A paramValue to identify when to start suppressing the output events. If empty or undefined then any value will trigger",
                    "name": "triggerParamValue",
                    "optional": true,
                    "type": "string"
                },
                {
                    "defaultValue": false,
                    "description": "Extend the suppression time if another triggering event arrives while the output is suppressed",
                    "name": "triggerExtension",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "advanced": true,
                    "defaultValue": "function(value, analytic) { return analytic.getProperty('triggerParam').value; }",
                    "description": "A param to identify which events should be suppressed (Defaults to the triggerParam)",
                    "name": "actionParam",
                    "optional": true,
                    "type": "string"
                },
                {
                    "advanced": true,
                    "defaultValue": "",
                    "description": "Only suppress events with this actionParam value",
                    "name": "actionParamValue",
                    "optional": true,
                    "type": "string"
                },
                {
                    "advanced": true,
                    "defaultValue": "",
                    "description": "An event's param name that immediately unsuppresses the output",
                    "name": "resetParam",
                    "optional": true,
                    "type": "string"
                },
                {
                    "advanced": true,
                    "defaultValue": "",
                    "description": "An event's resetParam value that immediately unsuppresses the output",
                    "name": "resetParamValue",
                    "optional": true,
                    "type": "string"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "If defined, the suppression of Data events is partitioned by the sourceId parameter of the input data stream",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "description": "Determines if the input data is inside or outside a GEO location.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.geolocation</FONT><BR>GeoFence</H2><HR>The Geofence Analytic takes a set of input Data sourceIds and uses the location object as either a cartesian or GPS location. Based on the Analytic configuration, a Data event will be generated whenever an input Data event's location activates one of five triggers in the configuration. The sourceId could be the device identifier, a completely synthetic identifier, or perhaps an sourceId higher up a hierarchy for a group calculation in which the original Data sourceId values are irrelevant. The triggers are defined within the configuration based on whether the Data is inside the geoFence, outside the geoFence, has entered the geoFence, has exited the geoFence or has dwelled within the geoFence longer than a defined period of time. At least one of these five triggers must be enabled.<br><br> There are three types of geoFence available, of which only one can be used in a given analytic instance.<br> 1) Square, aligned with the x-axis (geoFenceOffset).<br> 2) Circle (geoFenceRadius).<br> 3) Polygon (geoFencePolygon).<br><br> A square and a circle always require a geoFence reference point for their centre, either defined with the geoFenceLatitude, geoFenceLongitude parameter pair, or with the geoFenceLatitudeParam, geoFenceLongitude parameter pair. Polygons can also use the parameter pairs, but may also be defined absolutely with just the vertex points, without being relative to a reference point. In this latter case, do not define either of the parameter pairs mentioned.<br><br> A cartesian coordinate system is taken as flat and completely arbitrary. As such, no boundary validation is done on the coordinates received. For GPS, the latitude and longitude are validated, and the dateline handled. A current limitation is that the analytic will not correctly handle geoFences which cross over either pole, nor does it it check for violating this limit. GPS distance calculations use a Haversine calculation. For cartesian coordinates latitude parameters are read as the y axis and longitude as the x axis.<br><br> When defining a polygon geoFence, it is assumed that no polygon vertex will be more than half a hemisphere from it's nearest neighbour. This assumption is used when deciding whether the link between vertices crosses the dateline or not. The polygon links are assumed to be straight lines, an assumption which works acceptable over localised areas, but will become inaccurate over large areas. The polygon is defined in the configuration as a stringified sequence of stringified vertex points. Each point contains two decimal values, using space and/or comma as separators. Eg:<br> [\"0 0\", \"10 10\", \"10 0\"]<br> [\"0,0\", \"10,10\", \"10,0\"]<br> [\"0, 0\", \"10, 10\", \"10, 0\"]<br> There must be at least 3 vertices as neither a point nor a line is valid.<br><br> GeoFences can be defined in absolute terms or relative to given coordinates provided within each Data event. This allows a variety of different use cases to be used.<br><br> The analytic has two running modes. The first is the standard Industry Analytics Kit mode of using the processData action for receiving each Data event. The second is to use the correlator hypertree directly, via listeners, for Data events. In the second case, the geoFence can only be defined upfront at init time, and is fixed for the lifetime of the analytic.<br><br> The incoming Data events must have their xValues and yValues set to the coordinates to be checked. xValue must be the x cartesian value or longitude, yValue the y cartesian value or latitude.<br><br> The analytic can give an output when the source has dwelt within the geofence for a defined length of time. This can either be based on the Data timestamps, in which case the output will be generated on the first Data event received after the dwellTime period. Alternatively, this can be done in real time, using a correlator wait listener. This should only be used if the data is being received in real time and the correlator time resolution is acceptable (default = 100ms). In essence, the first method requires confirmation that the source is still resident in the geoFence after the expiration of the dwell period, whereas the second method will assume the source is still resident if it has not been explicitly told otherwise. Only one dwell output will be generated per stay within the geoFence in both cases.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only one Data stream name must be provided. Its Data events must have the xValue and yValue parameters set to the coordinates of the input.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>A single Data stream name must be provided. The resulting Data events will have the same <font face=\"courier\" size=\"-1\">sourceId</font> (defined by the configuration parameters below). The string value (\"sValue\") will contain the action state of either \"ENTERED\", \"EXITED\", \"DWELLED\", \"INSIDE\" or \"OUTSIDE\". All the <font face=\"courier\" size=\"-1\">params</font> from the triggering input Data are copied to the output Data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>enableEntry</b></td><td>Defines whether a Data event will be generated when the incoming Data event enters the defined location.</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableExit</b></td><td>Defines whether a Data event will be generated when the incoming Data event leaves the defined location.</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableDwell</b></td><td>Defines whether a Data event will be generated when the incoming Data event dwells in the defined location for the period defined by the \"dwellTime\" parameter. </td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableInside</b></td><td>Defines whether a Data event will be generated when the incoming Data event is inside the defined location. </td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>enableOutside</b></td><td>Defines whether a Data event will be generated when the incoming Data event is outside the defined location. </td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>dwellTime</b></td><td>Defines the duration in seconds that a source needs to be within a geoFence to be considered as dwelling.</td> <td>Stringified decimal</td><td>Decimal</td><td>True, if enableDwell is enabled.</td><td>0.0</td></tr> <tr><td><b>realtimeDwell</b></td><td>Defines whether the dwell should be based on the Data timestamps or be real time.</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>true, if useHypertree is enabled, otherwise false.</td></tr> <tr><td><b>geoFenceOffset</b></td><td>Defines the offset of the geoFenced square boundary from it's centre in metres</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td>0.0</td></tr> <tr><td><b>geoFenceRadius</b></td><td>Defines the radius of the geoFenced circle in metres</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td>0.0</td></tr> <tr><td><b>geoFencePolygon</b></td><td>Defines the vertices of the polygon. See examples above.</td> <td>Stringified sequence<string></td><td>String</td><td>False</td><td>[]</td></tr> <tr><td><b>geoFenceLatitude<br>geoFenceLongitude</b></td><td>Use as a pair. Defines the latitude and longitude coordinates for the reference point of the GeoFence.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td>0.0</td></tr> <tr><td><b>geoFenceLatitudeParam<br>geoFenceLongitudeParam</b></td><td>Use as a pair. Defines the parameters which will contain the latitude and longitude coordinates for the reference point of the GeoFence. This option cannot be used with the hypertree.</td> <td>String</td><td>String</td><td>False</td><td>0.0</td></tr> <tr><td><b>useCartesianCoords</b></td><td>Whether to use cartesian coordinates (true) or GPS coordinates (false).</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> <tr><td><b>useHypertree</b></td><td>Whether to use the hypertree (true) or the Analytics object processData action (false).</td> <td>Stringified boolean</td><td>Boolean</td><td>False</td><td>false</td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a GeoFence Analytic which takes Data events on the channel \"Input1\"  <br>// and uses the events xValue and yValue parameters as latitude and longitude<br>// to listen for events that are entering or leaving a 100m radius of Big Ben in London. <br>// If there a event was received that entered/exited the defined area, then the<br>// Analytic will publish the event on the output channel \"Output1\" with the \"sValue\"<br>// parameter modified to indicate either \"ENTERED\" or \"EXITED\".  This example is better<br>// used when a small number of GeoFences are required, and a large number of Data events<br>// for that location are required.<br>send com.industry.analytics.Analytic(\"GeoFence\", [\"Input\"], [\"Output1\"], {\"geoFenceRadius\":\"100\", \"geoFenceLatitude\":\"51.500755\", <br>                                                                          \"geoFenceLongitude\":\"-0.124627\", \"enableEntry\":\"true\", <br>                                                                          \"enableExit\":\"true\"} ) to \"\";<br><br>// Define a GeoFence Analytic which takes Data events on the channel \"Input1\"  <br>// and checks the events parameters for a \"home_latitude\" and \"home_longitude\"<br>// values to define a center point at which to calculate whether or not the <br>// events xValue and yValue parameters (treated as latitude and longitude)<br>// are within 20m of that radius. If there a event was received that entered<br>// the defined area and stayed/dwelled inside that area for 60 seconds, then <br>// the Analytic will publish the event on the output channel \"Output1\" with the <br>// \"sValue\" parameter modified to indicate it \"DWELLED\".  This example is better<br>// used when a very large number of GeoFences with a lower number of location <br>// Data events are required.<br>send com.industry.analytics.Analytic(\"GeoFence\", [\"Input\"], [\"Output1\"], {\"geoFenceRadius\":\"100\", \"geoFenceLatitudeParam\":\"home_latitude\", <br>                                                                          \"geoFenceLongitudeParam\":\"home_longitude\", \"enableDwell\":\"true\", <br>                                                                          \"dwellTime\":\"60.0\"} ) to \"\";<br></pre></dd> </dl><DL><DT><B>Listens:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Data</A>&nbsp;-&nbsp;</DD></DL><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DWELL_TIME</A> := \"dwellTime\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the minium duration (in seconds) a Data event will need to stay in the location before a Data event is generated for the dwell action.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DWELLED</A> := \"DWELLED\"</B></CODE><br></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant decimal</CODE></FONT></TD><TD><CODE><B><A >EARTH_RADIUS</A> := 6371000.0d</B></CODE><br><br>Radius of the Earth in metres. No point being more precise with spherical model.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ENABLE_DWELL</A> := \"enableDwell\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event dwells within the defined location for at least the duration specified by the \"dwellTime\" parameter</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ENABLE_ENTRY</A> := \"enableEntry\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event enters the defined location</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ENABLE_EXIT</A> := \"enableExit\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event exits the defined location</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ENABLE_INSIDE</A> := \"enableInside\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is inside the GeoFenced area.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ENABLE_OUTSIDE</A> := \"enableOutside\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is outside the GeoFenced area.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >ENTERED</A> := \"ENTERED\"</B></CODE><br></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >EXITED</A> := \"EXITED\"</B></CODE><br></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >GEOFENCE_LATITUDE</A> := \"geoFenceLatitude\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the latitude of the geofenced area</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >GEOFENCE_LATITUDE_PARAM</A> := \"geoFenceLatitudeParam\"</B></CODE><br><br>This constant defines the configuration parameter name in the Data event that defines the latitude of the geofenced area</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >GEOFENCE_LONGITUDE</A> := \"geoFenceLongitude\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the longitude of the geofenced area</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >GEOFENCE_LONGITUDE_PARAM</A> := \"geoFenceLongitudeParam\"</B></CODE><br><br>This constant defines the configuration parameter name in the Data event that defines the longitude of the geofenced area</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >GEOFENCE_OFFSET</A> := \"geoFenceOffset\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the offset of the geofenced area in metres, when using a square geofence.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >GEOFENCE_POLYGON</A> := \"geoFencePolygon\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the corners of a polygon, when using a polygon geofence.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >GEOFENCE_RADIUS</A> := \"geoFenceRadius\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the radius of the geofenced area in metres, when using a circular geofence.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >INSIDE</A> := \"INSIDE\"</B></CODE><br></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant decimal</CODE></FONT></TD><TD><CODE><B><A >METERS_PER_DEGREE_LATITUDE</A> := 111111.1111d</B></CODE><br><br>Defines the constant value for the number of meters in a degree of latitude. Typically used in geo-location distance calculations.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"GeoFence\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >OUTSIDE</A> := \"OUTSIDE\"</B></CODE><br></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >REALTIME_DWELL</A> := \"realtimeDwell\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether the dwell uses a realtime EPL wait listener or is based soley on Data event timestamps.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >USE_CARTESIAN_COORDS</A> := \"useCartesianCoords\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether the coordinates should be treated as GPS latitude/longitude points or as cartesian coordinates</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >USE_HYPERTREE</A> := \"useHypertree\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether hypertree listeners should be used when geoFenceLatitude and geoFenceLongitude are specified.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >_calculateGeoLocation</A></B>(decimal&nbsp;geoFenceLatitude,&nbsp;decimal&nbsp;geoFenceLongitude)</CODE><br></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"DWELL_TIME\"></A><H3>DWELL_TIME</H3><PRE>constant string&nbsp;<B>DWELL_TIME := \"dwellTime\"</B></PRE>This constant defines the configuration parameter name that defines the minium duration (in seconds) a Data event will need to stay in the location before a Data event is generated for the dwell action.<HR><A NAME=\"DWELLED\"></A><H3>DWELLED</H3><PRE>constant string&nbsp;<B>DWELLED := \"DWELLED\"</B></PRE><HR><A NAME=\"EARTH_RADIUS\"></A><H3>EARTH_RADIUS</H3><PRE>constant decimal&nbsp;<B>EARTH_RADIUS := 6371000.0d</B></PRE>Radius of the Earth in metres. No point being more precise with spherical model.<HR><A NAME=\"ENABLE_DWELL\"></A><H3>ENABLE_DWELL</H3><PRE>constant string&nbsp;<B>ENABLE_DWELL := \"enableDwell\"</B></PRE>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event dwells within the defined location for at least the duration specified by the \"dwellTime\" parameter<HR><A NAME=\"ENABLE_ENTRY\"></A><H3>ENABLE_ENTRY</H3><PRE>constant string&nbsp;<B>ENABLE_ENTRY := \"enableEntry\"</B></PRE>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event enters the defined location<HR><A NAME=\"ENABLE_EXIT\"></A><H3>ENABLE_EXIT</H3><PRE>constant string&nbsp;<B>ENABLE_EXIT := \"enableExit\"</B></PRE>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event exits the defined location<HR><A NAME=\"ENABLE_INSIDE\"></A><H3>ENABLE_INSIDE</H3><PRE>constant string&nbsp;<B>ENABLE_INSIDE := \"enableInside\"</B></PRE>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is inside the GeoFenced area.<HR><A NAME=\"ENABLE_OUTSIDE\"></A><H3>ENABLE_OUTSIDE</H3><PRE>constant string&nbsp;<B>ENABLE_OUTSIDE := \"enableOutside\"</B></PRE>This constant defines the configuration parameter name that defines whether a Data event will be generated when the incoming Data event has a Geolocation that is outside the GeoFenced area.<HR><A NAME=\"ENTERED\"></A><H3>ENTERED</H3><PRE>constant string&nbsp;<B>ENTERED := \"ENTERED\"</B></PRE><HR><A NAME=\"EXITED\"></A><H3>EXITED</H3><PRE>constant string&nbsp;<B>EXITED := \"EXITED\"</B></PRE><HR><A NAME=\"GEOFENCE_LATITUDE\"></A><H3>GEOFENCE_LATITUDE</H3><PRE>constant string&nbsp;<B>GEOFENCE_LATITUDE := \"geoFenceLatitude\"</B></PRE>This constant defines the configuration parameter name that defines the latitude of the geofenced area<HR><A NAME=\"GEOFENCE_LATITUDE_PARAM\"></A><H3>GEOFENCE_LATITUDE_PARAM</H3><PRE>constant string&nbsp;<B>GEOFENCE_LATITUDE_PARAM := \"geoFenceLatitudeParam\"</B></PRE>This constant defines the configuration parameter name in the Data event that defines the latitude of the geofenced area<HR><A NAME=\"GEOFENCE_LONGITUDE\"></A><H3>GEOFENCE_LONGITUDE</H3><PRE>constant string&nbsp;<B>GEOFENCE_LONGITUDE := \"geoFenceLongitude\"</B></PRE>This constant defines the configuration parameter name that defines the longitude of the geofenced area<HR><A NAME=\"GEOFENCE_LONGITUDE_PARAM\"></A><H3>GEOFENCE_LONGITUDE_PARAM</H3><PRE>constant string&nbsp;<B>GEOFENCE_LONGITUDE_PARAM := \"geoFenceLongitudeParam\"</B></PRE>This constant defines the configuration parameter name in the Data event that defines the longitude of the geofenced area<HR><A NAME=\"GEOFENCE_OFFSET\"></A><H3>GEOFENCE_OFFSET</H3><PRE>constant string&nbsp;<B>GEOFENCE_OFFSET := \"geoFenceOffset\"</B></PRE>This constant defines the configuration parameter name that defines the offset of the geofenced area in metres, when using a square geofence.<HR><A NAME=\"GEOFENCE_POLYGON\"></A><H3>GEOFENCE_POLYGON</H3><PRE>constant string&nbsp;<B>GEOFENCE_POLYGON := \"geoFencePolygon\"</B></PRE>This constant defines the configuration parameter name that defines the corners of a polygon, when using a polygon geofence.<HR><A NAME=\"GEOFENCE_RADIUS\"></A><H3>GEOFENCE_RADIUS</H3><PRE>constant string&nbsp;<B>GEOFENCE_RADIUS := \"geoFenceRadius\"</B></PRE>This constant defines the configuration parameter name that defines the radius of the geofenced area in metres, when using a circular geofence.<HR><A NAME=\"INSIDE\"></A><H3>INSIDE</H3><PRE>constant string&nbsp;<B>INSIDE := \"INSIDE\"</B></PRE><HR><A NAME=\"METERS_PER_DEGREE_LATITUDE\"></A><H3>METERS_PER_DEGREE_LATITUDE</H3><PRE>constant decimal&nbsp;<B>METERS_PER_DEGREE_LATITUDE := 111111.1111d</B></PRE>Defines the constant value for the number of meters in a degree of latitude. Typically used in geo-location distance calculations.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"GeoFence\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"OUTSIDE\"></A><H3>OUTSIDE</H3><PRE>constant string&nbsp;<B>OUTSIDE := \"OUTSIDE\"</B></PRE><HR><A NAME=\"REALTIME_DWELL\"></A><H3>REALTIME_DWELL</H3><PRE>constant string&nbsp;<B>REALTIME_DWELL := \"realtimeDwell\"</B></PRE>This constant defines the configuration parameter name that defines whether the dwell uses a realtime EPL wait listener or is based soley on Data event timestamps.<HR><A NAME=\"USE_CARTESIAN_COORDS\"></A><H3>USE_CARTESIAN_COORDS</H3><PRE>constant string&nbsp;<B>USE_CARTESIAN_COORDS := \"useCartesianCoords\"</B></PRE>This constant defines the configuration parameter name that defines whether the coordinates should be treated as GPS latitude/longitude points or as cartesian coordinates<HR><A NAME=\"USE_HYPERTREE\"></A><H3>USE_HYPERTREE</H3><PRE>constant string&nbsp;<B>USE_HYPERTREE := \"useHypertree\"</B></PRE>This constant defines the configuration parameter name that defines whether hypertree listeners should be used when geoFenceLatitude and geoFenceLongitude are specified.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"_calculateGeoLocation()\"></A><H3>_calculateGeoLocation</H3><PRE>void&nbsp;<B>_calculateGeoLocation</B>(decimal&nbsp;geoFenceLatitude,&nbsp;decimal&nbsp;geoFenceLongitude)</PRE><DL><DT><B>Parameters:</B></DT><DD><tt>geoFenceLatitude</tt></DD><DD><tt>geoFenceLongitude</tt></DD></DL><HR><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "GeoLocation",
            "inputChannels": [
                {
                    "dataProperties": [
                        "xValue",
                        "yValue"
                    ],
                    "description": "The channel to send in data",
                    "name": "Coordinates"
                }
            ],
            "name": "GeoFence",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+sValue"
                    ],
                    "description": "The channel to output GeoFence data",
                    "name": "Geofence Events"
                }
            ],
            "properties": [
                {
                    "defaultValue": false,
                    "description": "Defines whether a Data event will be generated when the incoming Data event enters the defined location",
                    "name": "enableEntry",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": false,
                    "description": "Defines whether a Data event will be generated when the incoming Data event leaves the defined location",
                    "name": "enableExit",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": false,
                    "description": "Defines whether a Data event will be generated when the incoming Data event dwells in the defined location for the period defined by the 'dwellTime' parameter",
                    "name": "enableDwell",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": false,
                    "description": "Defines whether a Data event will be generated when the incoming Data event is inside the defined location",
                    "name": "enableInside",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": false,
                    "description": "Defines whether a Data event will be generated when the incoming Data event is outside the defined location",
                    "name": "enableOutside",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": 0,
                    "description": "Defines the duration in seconds that a source needs to be within a geoFence to be considered as dwelling",
                    "name": "dwellTime",
                    "optional": "function(value, analytic) { return !analytic.getProperty('enableDwell').value || 'Required if enableDwell is True' }",
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Value must be >= 0.0' }"
                },
                {
                    "defaultValue": "function(value, analytic) { return analytic.getProperty('useHypertree').value; }",
                    "description": "Defines whether the dwell should be based on the Data timestamps or be real time",
                    "name": "realtimeDwell",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": 0,
                    "description": "Defines the offset of the geoFenced square boundary from it's centre in metres",
                    "name": "geoFenceOffset",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value !== 0 || 'Value must not be 0.0' }"
                },
                {
                    "defaultValue": 0,
                    "description": "Defines the radius of the geoFenced circle in metres",
                    "name": "geoFenceRadius",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Value must be >= 0.0' }"
                },
                {
                    "description": "Defines the vertices of the polygon",
                    "name": "geoFencePolygon",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.match(/^\\[(\"(\\d+(\\.\\d+)?)( +| *, *)(\\d+(\\.\\d+)?)\")(( +| *, *)\"(\\d+(\\.\\d+)?)( +| *, *)(\\d+(\\.\\d+)?)\"){2,}\\]$/g) || 'Invalid geoFencePolygon: example: [\"0 0\", \"10 10\", \"10 0\"]'; }"
                },
                {
                    "defaultValue": 0,
                    "description": "Defines the latitude for the reference point of the GeoFence. You also need to define the geoFenceLongitude",
                    "name": "geoFenceLatitude",
                    "optional": true,
                    "type": "decimal"
                },
                {
                    "defaultValue": 0,
                    "description": "Defines the longitude for the reference point of the GeoFence. You also need to define the geoFenceLatitude",
                    "name": "geoFenceLongitude",
                    "optional": true,
                    "type": "decimal"
                },
                {
                    "defaultValue": "0",
                    "description": "Defines the parameters which will contain the latitude coordinate for the reference point of the GeoFence. You also need to define the geoFenceLongitudeParam",
                    "name": "geoFenceLatitudeParam",
                    "optional": true,
                    "type": "string"
                },
                {
                    "defaultValue": "0",
                    "description": "Defines the parameters which will contain the longitude coordinate for the reference point of the GeoFence. You also need to define the geoFenceLatitudeParam",
                    "name": "geoFenceLongitudeParam",
                    "optional": true,
                    "type": "string"
                },
                {
                    "advanced": true,
                    "defaultValue": false,
                    "description": "Whether to use cartesian coordinates (true) or GPS coordinates (false)",
                    "name": "useCartesianCoords",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "advanced": true,
                    "defaultValue": false,
                    "description": "Whether to use the hypertree (true) or the Analytics object processData action (false)",
                    "name": "useHypertree",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "description": "Generates moving average from the input data.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>Average</H2><HR>The Average Analytic computation generates a Data containing a moving average calculation for each input Data received.<br><br> NOTE: Should have at least 5 events in the timeWindow.<br><br> The following formulas are implemented:<br><br> Standard formulation:<font face=\"courier\" size=\"-1\"><br><br> ma_n = a * x_n + (1 - a) * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ma_n-1 + a * (x_n - ma_n-1)<br> a = (1 - e^-u)<br> u = (t_n - t_n-1) / T<br> <br><br> Re-arrange for efficiency:<br><br> ma_n = (1 - a) * x_n + a * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= x_n + a * (ma_n-1 - x_n)<br> a = e^-u<br> u = (t_n - t_n-1) / T<br> </font><br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face=\"courier\" size=\"-1\">params</font> from the input Data are copied to the moving average Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window to calculate the moving average over</td> <td>Stringified decimal <font face=\"courier\" size=\"-1\">>0.0d</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">60.0d</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Average Analytic which takes Data events on the channel \"Input1\"  <br>// and calculates a moving average values in a 30.0 second time window. It publishes<br>// a Data event with the calculated moving average on the output channel \"Output1\".   <br>send com.industry.analytics.Analytic(\"Average\", [\"Input1\"], [\"Output1\"], {\"timeWindow\":\"30.0\"} ) to \"\";<br></pre></dd> </dl><DL><DT><B>See Also:</B></DT><DD>com.industry.analytics.Volatility&nbsp;-&nbsp;The Volatility Analytic which can also output the same Average calculation if required.</DD></DL><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Average\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIMEWINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the time window to calculate the moving average over</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Average\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"TIMEWINDOW\"></A><H3>TIMEWINDOW</H3><PRE>constant string&nbsp;<B>TIMEWINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name that specifies the time window to calculate the moving average over<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel used to calculate a moving average",
                    "name": "Data"
                }
            ],
            "name": "Average",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue"
                    ],
                    "description": "The channel where moving average data is output",
                    "name": "Average"
                }
            ],
            "properties": [
                {
                    "defaultValue": 60,
                    "description": "Defines the time window to calculate the moving average over",
                    "name": "timeWindow",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0.0' }"
                }
            ]
        },
        {
            "description": "Outputs the delta between the current and previous data.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>Delta</H2><HR>The Delta Analytic calculates a new Data event from the difference between the value on the current Data and the value on the previously received Data.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face=\"courier\" size=\"-1\">params</font> from the input Data are copied to the delta Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Delta Analytic which takes Data events on the channel \"Input1\"  <br>// and calculates the difference/delta between this event and the last Data <br>// event received (partitioned by the events \"sourceId\"). It publishes<br>// a Data event with the calculated delta value on the output channel \"Output1\".   <br>send com.industry.analytics.Analytic(\"Delta\", [\"Input1\"], [\"Output1\"], new dictionary&ltstring,string&gt ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Delta\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Delta\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel used to receive the data",
                    "name": "Data"
                }
            ],
            "name": "Delta",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue"
                    ],
                    "description": "The channel where the delta is output",
                    "name": "Delta"
                }
            ]
        },
        {
            "description": "Derives the gradient for the input data.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>Gradient</H2><HR>The Gradient Analytic derives the gradient for the data passing through. This is achieved by setting up a defined number of buckets (default 6) which cover a defined time window. No gradient is output until all the buckets are in use. Within each bucket the timestamps and values are averaged to give a single data point. The gradient is then calculated as the least mean square between these buckets data points. The gradient is calculated at the point a Data is received which has a timestamp beyond the time window covered by the current bucket. Once that has been done, the oldest bucket is discarded and the triggering Data becomes the first data point in the new bucket. This requires that at least the size of the defined bucket count number of events are received within the defined time window.  If the time window is set to zero, then the calculation is done for every data point received, although due to the algorithm in place the gradient produced is one point behind the incoming data.<br><br> The formulae used is: <font face=\"courier\" size=\"-1\"><br><br> g = &Sigma;(t.v) - &Sigma;(t).&Sigma;(v)/n<br> --------------------<br> &Sigma;(t^2) - (&Sigma;(t))^2/n<br> </font><br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window (in seconds) to use in the gradient calculation.</td> <td>Must be <font face=\"courier\" size=\"-1\">>= 0.0d</font></td><td>decimal</td><td>False</td><td>60.0d</td></tr> <tr><td><b>bucketCount</b></td><td>Defines the number of points to use in the gradient calculation.</td> <td>Must be <font face=\"courier\" size=\"-1\">>= 2</font></td><td>integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">6</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the gradient is calculated based on the <font face=\"courier\" size=\"-1\">sourceId</font> of the <font face=\"courier\" size=\"-1\">Data</font> events</td> <td>Non-Empty String</td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Gradient Analytic which takes Data events on the channel \"Input1\"  <br>// and calculates the gradient value over a 15second timewindow. It publishes<br>// a Data event with the calculated gradient value on the output channel \"Output1\".   <br>send com.industry.analytics.Analytic(\"Gradient\", [\"Input1\"], [\"Output1\"], {\"timeWindow\":\"15.0\"} ) to \"\";<br><br>// Define a Gradient Analytic which takes Data events on the channel \"Input2\"  <br>// and calculates the gradient value over the default 60second timewindow using 20 <br>// \"buckets\" to give a higher precision (IE 3 events per-bucket). It publishes a Data <br>// events with the calculated gradient value on the output channel \"Output2\".   <br>send com.industry.analytics.Analytic(\"Gradient\", [\"Input2\"], [\"Output2\"], {\"bucketCount\":\"20\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BUCKET_COUNT</A> := \"bucketCount\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the number of points to use in the gradient calculation</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the gradient calculations will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Gradient\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIME_WINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the time window (in seconds) to use in the gradient calculation</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BUCKET_COUNT\"></A><H3>BUCKET_COUNT</H3><PRE>constant string&nbsp;<B>BUCKET_COUNT := \"bucketCount\"</B></PRE>This constant defines the configuration parameter name that defines the number of points to use in the gradient calculation<HR><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the gradient calculations will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Gradient\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"TIME_WINDOW\"></A><H3>TIME_WINDOW</H3><PRE>constant string&nbsp;<B>TIME_WINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name that defines the time window (in seconds) to use in the gradient calculation<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel receiving the data used to calculate the gradient",
                    "name": "Data"
                }
            ],
            "name": "Gradient",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue",
                        "+params",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue"
                    ],
                    "description": "The channel on which to output gradient data",
                    "name": "Gradient"
                }
            ],
            "properties": [
                {
                    "defaultValue": 6,
                    "description": "Defines the number of points to use in the gradient calculation",
                    "name": "bucketCount",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 2 || 'Value must be greater than or equal to 2' }"
                },
                {
                    "defaultValue": 60,
                    "description": "Defines the time window (in seconds) to use in the gradient calculation",
                    "name": "timeWindow",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0.0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "Defines whether or not the gratient calculations are partitioned by the sourceId parameter of the input data stream",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "description": "Calculates the min/max values for the input Data.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>MinMax</H2><HR>The MinMax Analytic calculates the minimum and maximum values for an input data stream over a defined time window. This is achieved by creating a defined number of \"buckets\" (default 6) which cover the defined time window. The minimum and maximum values are kept for each buckets worth of time, which can then be used to quickly calculate the overall values for long time ranges. The minimum and maximum values are published on the output channel. If the optional parameter <font face=\"courier\" size=\"-1\">bySourceId</font> is provided, the MinMax partitions all incoming <font face=\"courier\" size=\"-1\">Data</font> events by the <font face=\"courier\" size=\"-1\">sourceId</font> parameter value. The output <font face=\"courier\" size=\"-1\">Data</font> event <font face=\"courier\" size=\"-1\">dValue</font> contains the new MIN or MAX value, <font face=\"courier\" size=\"-1\">xValue</font> contains newly calculated MIN value and <font face=\"courier\" size=\"-1\">yValue</font> contains newly calculated MAX value. </br> NOTE: In case of both Min and Max value changes after end of timeWindow, Max value will be contained in output <font face=\"courier\" size=\"-1\">Data</font> event <font face=\"courier\" size=\"-1\">dValue</font>.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>One or more input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window (in seconds) to calculate the min/max values over</td> <td>Must be <font face=\"courier\" size=\"-1\"> > 0.0d</font></td><td>decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">60.0d</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the min/max values are calculated based on the <font face=\"courier\" size=\"-1\">sourceId</font> of the <font face=\"courier\" size=\"-1\">Data</font> events</td> <td>Non-Empty String</td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> <tr><td><b>bucketCount</b></td><td>Defines the number of points to use in the min/max calculation.</td> <td>Must be <font face=\"courier\" size=\"-1\">>= 1</font></td><td>integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">6</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a MinMax Analytic which takes Data events received on the input <br>// channel \"Input1\" and publishes a Data event with the calculated minimum<br>// and maximum values over a 20 second time window on the output channel (\"Output1\")<br>send com.industry.analytics.Analytic(\"MinMax\", [\"Input1\"], [\"Output1\"], {\"timeWindow\":\"20.0\"} ) to \"\";<br><br>// Define a MinMax Analytic which takes Data events received on the input <br>// channel \"Input1\" and publishes a Data event with the calculated minimum<br>// and maximum values over a 20 second time window on the output channel (\"Output1\")<br>// but are calculated over ANY input Data events regardless of their sourceId value.<br>send com.industry.analytics.Analytic(\"MinMax\", [\"Input1\"], [\"Output1\"], {\"bySourceId\":\"false\",\"timeWindow\":\"20.0\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"import_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Import Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;TimeFormatPlugin</CODE></FONT></TD><TD><CODE><B><A >timeFormat</A></B></CODE><br></TD></TR></TABLE>&nbsp;<A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BUCKET_COUNT</A> := \"bucketCount\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the number of points to use in the min/max calculation</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the min/max values will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"MinMax\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIME_WINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the time window that the min/max values will be calculated over.</TD></TR></TABLE>&nbsp;<A NAME=\"member_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Member Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;dictionary&lt;string,&nbsp;sequence&lt;com.industry.analytics.streaming_calculations.MinMaxBucket&nbsp;&gt;&nbsp;&gt;</CODE></FONT></TD><TD><CODE><B><A >_buckets</A></B></CODE><br></TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"import_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Import Detail</B></FONT></TH></TR></TABLE><A NAME=\"timeFormat\"></A><H3>timeFormat</H3><PRE>TimeFormatPlugin&nbsp;<B>timeFormat</B></PRE><HR><A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BUCKET_COUNT\"></A><H3>BUCKET_COUNT</H3><PRE>constant string&nbsp;<B>BUCKET_COUNT := \"bucketCount\"</B></PRE>This constant defines the configuration parameter name that defines the number of points to use in the min/max calculation<HR><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the min/max values will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"MinMax\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"TIME_WINDOW\"></A><H3>TIME_WINDOW</H3><PRE>constant string&nbsp;<B>TIME_WINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name that defines the time window that the min/max values will be calculated over.<HR><A NAME=\"member_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Member Detail</B></FONT></TH></TR></TABLE><A NAME=\"_buckets\"></A><H3>_buckets</H3><PRE>dictionary&lt;string,&nbsp;sequence&lt;com.industry.analytics.streaming_calculations.MinMaxBucket&nbsp;&gt;&nbsp;&gt;&nbsp;<B>_buckets</B></PRE><HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channels to calculate the min/max values for",
                    "name": "Data"
                }
            ],
            "name": "MinMax",
            "outputChannels": [
                {
                    "dataProperties": [
                        "-dValue",
                        "-sValue",
                        "+xValue",
                        "+yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The data channel containing the min/max data values",
                    "name": "MinMax"
                }
            ],
            "properties": [
                {
                    "defaultValue": 60,
                    "description": "The time window (in seconds) to calculate the min/max values over",
                    "name": "timeWindow",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "Defines whether or not the min/max values are partitioned by the sourceId parameter of the input data stream",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "advanced": true,
                    "defaultValue": 6,
                    "description": "Defines the number of points to use in the min/max calculation.",
                    "name": "bucketCount",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                }
            ]
        },
        {
            "description": "Finds the mode for the input data.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>Mode</H2><HR>The Mode Analytic finds the mode of the data passing through. This is achieved by setting up a defined number of buckets (default 5) which cover a defined time window. Mode is output end of each bucket. The mode is calculated at the point a Data is received which has a timestamp beyond the time window covered by the current bucket. Once that has been done, the oldest bucket is discarded and the triggering Data becomes the first data point in the new bucket. If the time window is set to zero, then this calculation is done for every data point received, although due to the algorithm in place the mode produced is one point behind the incoming data. It there are two mode values then the one smaller is returned as mode.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>bucketCount</b></td><td>Defines the number of buckets to use in the mode calculation.</td> <td>Must be <font face=\"courier\" size=\"-1\"> >= 2</font></td><td>integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">5</font></td></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window (in seconds) to use in the mode calculation.</td> <td>Must be <font face=\"courier\" size=\"-1\"> >= 0.0d</font></td><td>decimal</td><td>True</td><td></td></tr> <tr><td><b>decimalPrecision</b></td><td>Defines the number of decimal points to use in the mode calculation.</td> <td>Must be <font face=\"courier\" size=\"-1\"> >= 0</font></td><td>integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">2</font></td></tr> <tr><td><b>bySourceId</b></td><td>Defines whether or not the mode calculations will be partitioned by the sourceId.</td> <td><font face=\"courier\" size=\"-1\">True or False</font></td><td>boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">True</font></td></tr> <tr><td><b>dataAttribute</b></td><td>The configuration parameter name that defines the Data attribute to use in the mode calculation.</td> <td>Non empty string</td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">dValue</font></td></tr> <tr><td><b>bucketCacheCount</b></td><td>Defines the number of data points to save in bucket cache.</td> <td>Must be <font face=\"courier\" size=\"-1\"> >= 1</font></td><td>integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">10</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>//Define a Mode Analytic which takes Data events on the channel \"Input1\"  <br>//and calculates the mode value over a 50 second timewindow with default bucketCount, <br>//bySourceId, decimalPrecision and dataAttribute parameters. It publishes<br>//a Data event with the calculated mode value at the end of bucket on the output channel \"Output1\".   <br>send com.industry.analytics.Analytic(\"Mode\", [\"Input1\"], [\"Output1\"], {\"timeWindow\":\"50.0\"} ) to \"\";<br><br>//Define a Mode Analytic which takes Data events on the channel \"Input\"  <br>//and calculates the mode value over a 50 second timewindow using 6 \"time buckets\" <br>//to give a higher precision. It reads Data attribute xValue with decimal precision of 3 digits<br>//for calculating mode. <br>//It publishes a Data event with the calculated mode value on the output channel \"Output\" at end of every bucket.   <br>send com.industry.analytics.Analytic(\"Mode\", [\"Input\"], [\"Output\"], {\"timeWindow\" : \"50.0\", \"bucketCount\":\"6\", \"dataAttribute\":\"xValue\", \"decimalPrecision\":\"3\"})<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BUCKET_CACHE_COUNT</A> := \"bucketCacheCount\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the count of unique Data events values to keep in a bucket as cache which then will be used for overall mode calculation inside timewindow.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BUCKET_COUNT</A> := \"bucketCount\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the number of points to use in the mode calculation</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCE_ID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the mode calculations will be partitioned by the sourceId</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DATA_ATTRIBUTE</A> := \"dataAttribute\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the Data attribute to use in the mode calculation Data taaribute can be dValue, sValue, xValue, yValue or zValue.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DECIMAL_PRECISION</A> := \"decimalPrecision\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the decimal precision to use in the mode calculation (in case of floating/decimal type)</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Mode\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIME_WINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name that defines the time window (in seconds) to use in the mode calculation</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BUCKET_CACHE_COUNT\"></A><H3>BUCKET_CACHE_COUNT</H3><PRE>constant string&nbsp;<B>BUCKET_CACHE_COUNT := \"bucketCacheCount\"</B></PRE>This constant defines the configuration parameter name that defines the count of unique Data events values to keep in a bucket as cache which then will be used for overall mode calculation inside timewindow.<HR><A NAME=\"BUCKET_COUNT\"></A><H3>BUCKET_COUNT</H3><PRE>constant string&nbsp;<B>BUCKET_COUNT := \"bucketCount\"</B></PRE>This constant defines the configuration parameter name that defines the number of points to use in the mode calculation<HR><A NAME=\"BY_SOURCE_ID\"></A><H3>BY_SOURCE_ID</H3><PRE>constant string&nbsp;<B>BY_SOURCE_ID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the mode calculations will be partitioned by the sourceId<HR><A NAME=\"DATA_ATTRIBUTE\"></A><H3>DATA_ATTRIBUTE</H3><PRE>constant string&nbsp;<B>DATA_ATTRIBUTE := \"dataAttribute\"</B></PRE>This constant defines the configuration parameter name that defines the Data attribute to use in the mode calculation Data taaribute can be dValue, sValue, xValue, yValue or zValue.<HR><A NAME=\"DECIMAL_PRECISION\"></A><H3>DECIMAL_PRECISION</H3><PRE>constant string&nbsp;<B>DECIMAL_PRECISION := \"decimalPrecision\"</B></PRE>This constant defines the configuration parameter name that defines the decimal precision to use in the mode calculation (in case of floating/decimal type)<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Mode\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"TIME_WINDOW\"></A><H3>TIME_WINDOW</H3><PRE>constant string&nbsp;<B>TIME_WINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name that defines the time window (in seconds) to use in the mode calculation<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel receiving the data used to calculate the mode",
                    "name": "Data"
                }
            ],
            "name": "Mode",
            "outputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel on which to output mode data",
                    "name": "Mode"
                }
            ],
            "properties": [
                {
                    "defaultValue": 5,
                    "description": "Defines the number of buckets to use in the mode calculation",
                    "name": "bucketCount",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 2 || 'Value must be greater than or equal to 2' }"
                },
                {
                    "description": "Defines the time window (in seconds) to use in the mode calculation",
                    "name": "timeWindow",
                    "type": "decimal",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0.0' }"
                },
                {
                    "defaultValue": 2,
                    "description": "Defines the number digits after decimal point to use in mode calculation.",
                    "name": "decimalPrecision",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 0 || 'Value must be greater than or equal to 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "Defines whether or not the mode calculations will be partitioned by the sourceId.",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": "dValue",
                    "description": "The configuration parameter name that defines the Data attribute to use in the mode calculation.",
                    "name": "dataAttribute",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "dValue",
                        "sValue",
                        "xValue",
                        "yValue",
                        "zValue",
                        "type"
                    ]
                },
                {
                    "defaultValue": 10,
                    "description": "Defines the number of data points to save in bucket cache.",
                    "name": "bucketCacheCount",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value >= 1 || 'Value must be greater than or equal to 1' }"
                }
            ]
        },
        {
            "description": "Calculates the spread of data from two input streams.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>Spread</H2><HR>The Spread Analytic calculates a new Data event from the spread between the latest values of Data events on two input streams.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Two input Data stream names must be provided. Names should not be same.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the params from the received input Data are copied to the spread Data, as is the sourceId.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Spread values are calculated based on the <font face=\"courier\" size=\"-1\">sourceId</font> of the <font face=\"courier\" size=\"-1\">Data</font> events</td> <td><font face=\"courier\" size=\"-1\">\"true\"</font> or <font face=\"courier\" size=\"-1\">\"false\"</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr><br><br> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Spread Analytic which takes Data events on the channel \"Input1\" and \"Input2\" <br>// and publishes a Data event on the output channel \"Output1\" with the <br>// spread value calculated from events from two input streams based on source Ids . <br>send com.industry.analytics.Analytic(\"Spread\", [\"Input1\", \"Input2\"], [\"Output1\"], new dictionary&ltstring,string&gt ) to \"\";<br><br>//Define a Spread Analytic which takes Data events on the channel \"Input1\" and \"Input2\" <br>//and publishes a Data event on the output channel \"Output1\" with the <br>//spread value calculated from events from two input streams irrespective of source Ids . <br>send com.industry.analytics.Analytic(\"Spread\", [\"Input1\", \"Input2\"], [\"Output2\"], {\"bySourceId\":\"false\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the Spread values will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Spread\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the Spread values will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Spread\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The first channel used to calculate the spread across the sourceIds",
                    "name": "Data1"
                },
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The second channel used to calculate the spread across the sourceIds",
                    "name": "Data2"
                }
            ],
            "name": "Spread",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue"
                    ],
                    "description": "The channel to output spread data",
                    "name": "Spread"
                }
            ],
            "properties": [
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "The Spread values are calculated based on the sourceIds",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        },
        {
            "description": "Calculates sum of input data by sample count/time.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>Sum</H2><HR>The Sum Analytic computation generates a Data containing a moving sum calculation for each input Data received. The sum is calculated based on the number of events recieved within a time window (in seconds) or last 'N' events. A smoothing factor is used make result precise. Larger the number for <font face=\"courier\" size=\"-1\">smoothingFactor</font> better the precision.</br> NOTE: The smoothing factor should be less than or equal to calculationValue parameter.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only one input Data stream names must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. Only Data events of Computed type are generated.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>calculationType</b></td><td>Defines whether the sum calculation is based on timeWindow or count of last \u2018N\u2019 events.</td> <td>Valid values are either <font face=\"courier\" size=\"-1\">sampleCount</font> or <font face=\"courier\" size=\"-1\">timeWindow</font> </td><td>String</td><td>True</td><td> </td></tr> <tr><td><b>calculationValue</b></td><td>Defines the value for <font face=\"courier\" size=\"-1\">sampleCount</font> or <font face=\"courier\" size=\"-1\">timeWindow</font>.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">60.0d</font></td></tr> <tr><td><b>smoothingFactor</b></td><td>Defines the smoothing factor to be used for precision.</td> <td>Stringified decimal</td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">10.0d</font> </td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>//Define a Sum Analytic which takes Data events on the channel \"Input\"  <br>//and calculate the moving sum of last 21 Data events with smoothingFactor of 4 for precision. It publishes<br>//a Data event with the calculated value of Sum on the output channel \"Output\" after receiving every Data event. <br>send com.industry.analytics.Analytic(\"Sum\", [\"Input\"], [\"Output\"], {\"calculationType\": \"sampleCount\", \"calculationValue\":\"21.0\", \"smoothingFactor\":\"4.0\"} ) to \"\";<br><br>//Define a Sum Analytic which takes Data events on the channel \"Input\"  <br>//and calculate the moving sum of events received within timeWindow of 60 seconds with smoothingFactor of 4 for precision. It publishes<br>//a Data event with the calculated value of Sum on the output channel \"Output\" after receiving every Data event. <br>send com.industry.analytics.Analytic(\"Sum\", [\"Input\"], [\"Output\"], {\"calculationType\": \"timeWindow\", \"calculationValue\":\"60.0\", \"smoothingFactor\":\"4.0\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >CALCULATION_TYPE</A> := \"calculationType\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the calculation type to be used to calculate the sum. Type can be either 'timeWindow' or 'sampleCount'</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >CALCULATION_VALUE</A> := \"calculationValue\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the calculation value to be used for calculationType to calculate the sum.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Sum\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SAMPLE_COUNT</A> := \"sampleCount\"</B></CODE><br><br>This constant defines the configuration parameter calculationType value</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SMOOTHING_FACTOR</A> := \"smoothingFactor\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the smoothing factor used to calculate the sum.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIMEWINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter calculationType value</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"CALCULATION_TYPE\"></A><H3>CALCULATION_TYPE</H3><PRE>constant string&nbsp;<B>CALCULATION_TYPE := \"calculationType\"</B></PRE>This constant defines the configuration parameter name that specifies the calculation type to be used to calculate the sum. Type can be either 'timeWindow' or 'sampleCount'<HR><A NAME=\"CALCULATION_VALUE\"></A><H3>CALCULATION_VALUE</H3><PRE>constant string&nbsp;<B>CALCULATION_VALUE := \"calculationValue\"</B></PRE>This constant defines the configuration parameter name that specifies the calculation value to be used for calculationType to calculate the sum.<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Sum\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"SAMPLE_COUNT\"></A><H3>SAMPLE_COUNT</H3><PRE>constant string&nbsp;<B>SAMPLE_COUNT := \"sampleCount\"</B></PRE>This constant defines the configuration parameter calculationType value<HR><A NAME=\"SMOOTHING_FACTOR\"></A><H3>SMOOTHING_FACTOR</H3><PRE>constant string&nbsp;<B>SMOOTHING_FACTOR := \"smoothingFactor\"</B></PRE>This constant defines the configuration parameter name that specifies the smoothing factor used to calculate the sum.<HR><A NAME=\"TIMEWINDOW\"></A><H3>TIMEWINDOW</H3><PRE>constant string&nbsp;<B>TIMEWINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter calculationType value<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel to calculate sum",
                    "name": "Data"
                }
            ],
            "name": "Sum",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue"
                    ],
                    "description": "The channel to output moving sum calculations",
                    "name": "Sum"
                }
            ],
            "properties": [
                {
                    "description": "Defines whether the sum calculation is based on timeWindow or count of last \u2018N\u2019 events.",
                    "name": "calculationType",
                    "optional": false,
                    "type": "string",
                    "validValues": [
                        "sampleCount",
                        "timeWindow"
                    ],
                    "validator": "function(value) { return value }"
                },
                {
                    "defaultValue": 60,
                    "description": "Defines the value for sampleCount or timeWindow.",
                    "name": "calculationValue",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": 10,
                    "description": "Defines the smoothing factor to be used for precision.",
                    "name": "smoothingFactor",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Must be greater than 0' }"
                }
            ]
        },
        {
            "description": "Generates volatility data from the input data.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.streaming_calculations</FONT><BR>Volatility</H2><HR>The Volatility Analytic computation generates a Data containing a Volatility calculation for each input Data received.<br><br> During the course of the calculation, the moving average is calculated as per the MovingAverage Analytic. If this value is required it can also be output from this computation as a more performant option than the doing the calculation a second time within a MovingAverage Analytic.  The Data events for the moving Average calculation are sent on the Analytics 2nd <font face=\"courier\" size=\"-1\">outputDataNames</font> parameter value.<br><br> The following formulas are implemented:<br><br> Standard Moving Average calculation:<font face=\"courier\" size=\"-1\"><br><br> ma_n = a * x_n + (1 - a) * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= ma_n-1 + a * (x_n - ma_n-1)<br> a = (1 - e^-u)<br> u = (t_n - t_n-1) / T<br> <br><br> Re-arranged Moving Average calculation for efficiency:<br><br> ma_n = (1 - a) * x_n + a * ma_n-1<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= x_n + a * (ma_n-1 - x_n)<br> a = e^-u<br> u = (t_n - t_n-1) / T<br><br><br> Volatility:<br> S_n = a * S_n-1 + (1 - a)(x_n - ma_n)(x_n - ma_n-1)<br> &nbsp;&nbsp;&nbsp;&nbsp;= a * (S_n-1 + (1 - a)(x_n - ma_n-1)^2)<br> </font><br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> <dd><b>Note:</b> The input Data events timestamp value should be defined as the number of seconds since the epoch (1st January 1970).</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>A maximum of two output Data stream names may be provided.<br> The first value must always be defined and will be the name of the stream that contains the Volatility calculations. If a second output name is provided, this will be used for the optional Moving Average calculation. Params are copied to the output data events.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>timeWindow</b></td><td>Defines the time window to calculate the Volatility over</td> <td>Stringified decimal <font face=\"courier\" size=\"-1\">>=0.0d</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">60.0d</font></td></tr> <tr><td><b>bySourceId</b></td><td>If defined, the Volatility values are calculated based on the <font face=\"courier\" size=\"-1\">sourceId</font> of the <font face=\"courier\" size=\"-1\">Data</font> events</td> <td><font face=\"courier\" size=\"-1\">\"true\"</font> or <font face=\"courier\" size=\"-1\">\"false\"</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> <tr><td><b>type</b></td><td>Defines whether to use variance or standard deviation (I.E. the square root of the Volatility).</td> <td><font face=\"courier\" size=\"-1\">\"stddev\"</font> or <font face=\"courier\" size=\"-1\">\"variance\"</font></td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">variance</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a Volatility Analytic which takes Data events on the channel \"Input1\"  <br>// and calculates the volatility/variance value over a 15second timewindow. It publishes<br>// a Data event with the calculated gradient value on the output channel \"Output1\".   <br>send com.industry.analytics.Analytic(\"Volatility\", [\"Input1\"], [\"Output1\"], {\"timeWindow\":\"15.0\"} ) to \"\";<br><br>// Define a Volatility Analytic which takes Data events on the channel \"Input2\"  <br>// and calculates the standard deviation value over a 30second timewindow instead. <br>// It publishes a Data event with the calculated value on the output channel \"Output2\".   <br>send com.industry.analytics.Analytic(\"Volatility\", [\"Input2\"], [\"Output2\"], {\"type\":\"stddev\", \"timeWindow\":\"30.0\"} ) to \"\";<br></pre></dd> </dl><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics.streaming_calculations\">com.industry.analytics.streaming_calculations.Average</A>&nbsp;-&nbsp;The moving Average Analytic.</DD></DL><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >BY_SOURCEID</A> := \"bySourceId\"</B></CODE><br><br>This constant defines the configuration parameter name that defines whether or not the Volatility values will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font></TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"Volatility\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TIMEWINDOW</A> := \"timeWindow\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the time window to calculate the Volatility over</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TYPE</A> := \"type\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies type of Volatility (I.E. standard deviation or varience) is generated.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"BY_SOURCEID\"></A><H3>BY_SOURCEID</H3><PRE>constant string&nbsp;<B>BY_SOURCEID := \"bySourceId\"</B></PRE>This constant defines the configuration parameter name that defines whether or not the Volatility values will be partitioned by the <font face=\"courier\" size=\"-1\">sourceId</font><HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"Volatility\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"TIMEWINDOW\"></A><H3>TIMEWINDOW</H3><PRE>constant string&nbsp;<B>TIMEWINDOW := \"timeWindow\"</B></PRE>This constant defines the configuration parameter name that specifies the time window to calculate the Volatility over<HR><A NAME=\"TYPE\"></A><H3>TYPE</H3><PRE>constant string&nbsp;<B>TYPE := \"type\"</B></PRE>This constant defines the configuration parameter name that specifies type of Volatility (I.E. standard deviation or varience) is generated.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Streaming Calculations",
            "inputChannels": [
                {
                    "dataProperties": [
                        "dValue"
                    ],
                    "description": "The channel receving the data for the Volatility calculation",
                    "name": "Data"
                }
            ],
            "name": "Volatility",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue"
                    ],
                    "description": "The channel will be the name of the stream that contains the Volatility calculations",
                    "name": "Volatility"
                },
                {
                    "dataProperties": [
                        "+dValue",
                        "-params",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue"
                    ],
                    "description": "The channel will be used for optional Moving Average calculations, if enabled",
                    "name": "Moving Average",
                    "optional": true
                }
            ],
            "properties": [
                {
                    "defaultValue": 60,
                    "description": "Defines the time window to calculate the Volatility over",
                    "name": "timeWindow",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value >=0 || 'Value must be greater than or equal to 0.0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "Defines whether or not the standard deviation is calculated by source id of Data event.",
                    "name": "bySourceId",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "defaultValue": "variance",
                    "description": "Defines whether to use variance or standard deviation (I.E. the square root of the Volatility).",
                    "name": "type",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "stddev",
                        "variance"
                    ]
                }
            ]
        },
        {
            "description": "Generates sample data for use by the analytics.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.utilities</FONT><BR>DataSimulator</H2><HR>The Data Simulator Analytic generates a set of data for use in an Industry Analytics Kit network.<br><br> The Data Simulator has two main modes of generating data patterns. The first is brownian motion which produces data with a random variation within a specified maximum delta. The second is a random which produces a random Data value within the defined range.<br><br> The Data Simulator can be configured to generate events at a specified data rante. The valid data rates are number of events 'perSecond', 'perMinute' or 'perHour'. The default value for data rate unit is 60.<br><br> The Data Simulator will generate data for one or more sources. The data for these sources are generated in a staggered fashion. Bear in mind that although the timestamps will be generated accurately, the actual output of the events will be subject to the usual limitations of time resolution within the correlator.<br><br> Brownian:</br> if stepType = percentage then val = ((rangeUpper - rangeLower)/100))* stepValue </br> else val = stepValue </br> delta = val.rand() - val.rand() </br> if (f(n-1)+delta > rangeUpper) OR (f(n-1)+delta < rangeLower) then delta = delta * -1 </br> f(n) = f(n-1) +  delta<br><br> Random : random := (rangeUpper - rangeLower).rand()<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>There is no input data events as simulator generates Data events and send on output channel.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>Only a single output Data stream name must be provided. All the <font face=\"courier\" size=\"-1\">params</font> from the input Data are copied to the delta Data.</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>simulationType</b></td><td>The Type of simulation data to be generated.</td> <td>One of <font face=\"courier\" size=\"-1\">\"brownian\", \"random\", \"sin\", \"sawRising\", \"sawFalling\", \"square\", \"triangle\"</font></td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">brownian</font></td></tr> <tr><td><b>rangeUpper</b></td><td>Defines the upper range of data value.</td> <td>> <font face=\"courier\" size=\"-1\">rangeLower</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">100.0d</font></td></tr> <tr><td><b>rangeLower</b></td><td>Defines the upper range of data value.</td> <td> < <font face=\"courier\" size=\"-1\">rangeUpper</font></td><td>Decimal</td><td>False</td><td><font face=\"courier\" size=\"-1\">0.0</font></td></tr> <tr><td><b>sourceIdPrefix</b></td><td>Defines the sourceId prefix to be used in generated data.</td> <td>String</td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">simulator_</font></td></tr> <tr><td><b>sourceIdCount</b></td><td>Defines the number of sourceIds for which data will be generated.</td> <td> > 0 </td> <td>Integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">1</font></td></tr> <tr><td><b>dataRateUnit</b></td><td>The units to be used for data rate generation.</td> <td><font face=\"courier\" size=\"-1\">perSecond, perMinute, perHour</font></td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">perMinute</font></td></tr> <tr><td><b>dataRateValue</b></td><td>The value to be specified for dataRateUnit param. The events will be generated per sourceId at specified rate.</td> <td> > 0 </td><td>Integer</td><td>False</td><td><font face=\"courier\" size=\"-1\">60</font></td></tr> <tr><td><b>stepType</b></td><td>Step type for simulated data.</td> <td><font face=\"courier\" size=\"-1\">percentage or absolute</font></td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">percentage</font></td></tr> <tr><td><b>stepValue</b></td><td>Defines the size of the step between each Data value.</td> <td> > 0</td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">5.0</font></td></tr> <tr><td><b>eventsPerCycle</b></td><td>Defines the number of Data points to be generated per cycle.</td> <td> > 0</td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">30</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>//Define a DataSimulator Analytic which will publish Data events on  <br>//the output channel \"Output1\". The values it will generate will range between <br>//50.0 and 100.0. Events are published by default every second<br>send com.industry.analytics.Analytic(\"DataSimulator\", new sequence&ltstring&gt, [\"Output1\"], {\"rangeUpper\":\"100.0d\", \"rangeLower\":\"50.0d\"} ) to \"\";<br><br>//Define a DataSimulator Analytic which will publish Data events on  <br>//the output channel \"Output1\". The  values it will generate will range between <br>//0.0 and 100.0 for 3 source ids. Events are published every 5 seconds per source id.<br>send com.industry.analytics.Analytic(\"DataSimulator\", new sequence&ltstring&gt, [\"Output1\"], {\"rangeUpper\":\"100.0d\", \"rangeLower\":\"50.0d\", \"sourceIdCount\":\"3\", \"dataRateUnit\":\"perMinute\", \"dataRateValue\":\"12\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DATA_RATE_UNIT</A> := \"dataRateUnit\"</B></CODE><br><br>This constant defines the data generation rate units</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DATA_RATE_VALUE</A> := \"dataRateValue\"</B></CODE><br><br>This constant defines thedata generation unit value</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >EVENTS_PER_CYCLE</A> := \"eventsPerCycle\"</B></CODE><br><br>This constant defines the number of Data points that are to be generated per cycle</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"DataSimulator\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >RANGE_LOWER</A> := \"rangeLower\"</B></CODE><br><br>This constant defines the lower range for Data dValue</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >RANGE_UPPER</A> := \"rangeUpper\"</B></CODE><br><br>This constant defines the upper range of dValue</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SIMULATION_TYPE</A> := \"simulationType\"</B></CODE><br><br>This constant defines the type of simulated data</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SOURCE_ID_COUNT</A> := \"sourceIdCount\"</B></CODE><br><br>This constant defines the sourceId count to be used</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >SOURCE_ID_PREFIX</A> := \"sourceIdPrefix \"</B></CODE><br><br>This constant defines the sourceId prefix to be used</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >STEP_TYPE</A> := \"stepType\"</B></CODE><br><br>This constant defines the the step type (absolute or percentage) that the step value should be treated as.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >STEP_VALUE</A> := \"stepValue\"</B></CODE><br><br>This constant defines the size of the step between each Data value</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"DATA_RATE_UNIT\"></A><H3>DATA_RATE_UNIT</H3><PRE>constant string&nbsp;<B>DATA_RATE_UNIT := \"dataRateUnit\"</B></PRE>This constant defines the data generation rate units<HR><A NAME=\"DATA_RATE_VALUE\"></A><H3>DATA_RATE_VALUE</H3><PRE>constant string&nbsp;<B>DATA_RATE_VALUE := \"dataRateValue\"</B></PRE>This constant defines thedata generation unit value<HR><A NAME=\"EVENTS_PER_CYCLE\"></A><H3>EVENTS_PER_CYCLE</H3><PRE>constant string&nbsp;<B>EVENTS_PER_CYCLE := \"eventsPerCycle\"</B></PRE>This constant defines the number of Data points that are to be generated per cycle<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"DataSimulator\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"RANGE_LOWER\"></A><H3>RANGE_LOWER</H3><PRE>constant string&nbsp;<B>RANGE_LOWER := \"rangeLower\"</B></PRE>This constant defines the lower range for Data dValue<HR><A NAME=\"RANGE_UPPER\"></A><H3>RANGE_UPPER</H3><PRE>constant string&nbsp;<B>RANGE_UPPER := \"rangeUpper\"</B></PRE>This constant defines the upper range of dValue<HR><A NAME=\"SIMULATION_TYPE\"></A><H3>SIMULATION_TYPE</H3><PRE>constant string&nbsp;<B>SIMULATION_TYPE := \"simulationType\"</B></PRE>This constant defines the type of simulated data<HR><A NAME=\"SOURCE_ID_COUNT\"></A><H3>SOURCE_ID_COUNT</H3><PRE>constant string&nbsp;<B>SOURCE_ID_COUNT := \"sourceIdCount\"</B></PRE>This constant defines the sourceId count to be used<HR><A NAME=\"SOURCE_ID_PREFIX\"></A><H3>SOURCE_ID_PREFIX</H3><PRE>constant string&nbsp;<B>SOURCE_ID_PREFIX := \"sourceIdPrefix \"</B></PRE>This constant defines the sourceId prefix to be used<HR><A NAME=\"STEP_TYPE\"></A><H3>STEP_TYPE</H3><PRE>constant string&nbsp;<B>STEP_TYPE := \"stepType\"</B></PRE>This constant defines the the step type (absolute or percentage) that the step value should be treated as.<HR><A NAME=\"STEP_VALUE\"></A><H3>STEP_VALUE</H3><PRE>constant string&nbsp;<B>STEP_VALUE := \"stepValue\"</B></PRE>This constant defines the size of the step between each Data value<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Utilities",
            "name": "DataSimulator",
            "outputChannels": [
                {
                    "dataProperties": [
                        "+dValue",
                        "-sValue",
                        "-xValue",
                        "-yValue",
                        "-zValue",
                        "-params"
                    ],
                    "description": "The channel on which to output simulator data",
                    "name": "DataSimulator"
                }
            ],
            "properties": [
                {
                    "defaultValue": "brownian",
                    "description": "The Type of simulation data to be generated.",
                    "name": "simulationType",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "brownian",
                        "random",
                        "sin",
                        "sawRising",
                        "sawFalling",
                        "square",
                        "triangle"
                    ]
                },
                {
                    "defaultValue": 100,
                    "description": "Defines the upper range of data value",
                    "name": "rangeUpper",
                    "optional": true,
                    "type": "decimal"
                },
                {
                    "defaultValue": 0,
                    "description": "Defines the upper range of data value",
                    "name": "rangeLower",
                    "optional": true,
                    "type": "decimal"
                },
                {
                    "defaultValue": "simulator_",
                    "description": "Defines the sourceId prefix to be used in generated data.",
                    "name": "sourceIdPrefix",
                    "optional": true,
                    "type": "string"
                },
                {
                    "defaultValue": 1,
                    "description": "Defines the number of sourceIds for which data will be generated.",
                    "name": "sourceIdCount",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "defaultValue": "perMinute",
                    "description": "The units to be used for data rate generation.",
                    "name": "dataRateUnit",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "perSecond",
                        "perMinute",
                        "perHour"
                    ]
                },
                {
                    "defaultValue": 60,
                    "description": "The value to be specified for dataRateUnit param.",
                    "name": "dataRateValue",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "defaultValue": "percentage",
                    "description": "Step type for data. It can be either percentage or absolute",
                    "name": "stepType",
                    "optional": true,
                    "type": "string",
                    "validValues": [
                        "percentage",
                        "absolute"
                    ]
                },
                {
                    "defaultValue": 5.0,
                    "description": "Defines the size of the step between each Data value.",
                    "name": "stepValue",
                    "optional": true,
                    "type": "decimal",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                },
                {
                    "advanced": true,
                    "defaultValue": 30,
                    "description": "Defines the number of Data points to be generated per cycle.",
                    "name": "eventsPerCycle",
                    "optional": true,
                    "type": "integer",
                    "validator": "function(value) { return value > 0 || 'Value must be greater than 0' }"
                }
            ]
        },
        {
            "description": "Enables data to be displayed in an Apama dataview window.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.utilities</FONT><BR>DataViewer</H2><HR>The DataViewer Analytic caches the data from the defined input Data channel to a table in DataViewer named by the provided <font face=\"courier\" size=\"-1\">outputDataName</font>. It also adds an entry in the DataViewer table for that table name. The Data table is keyed on name and sourceId. This method was chosen over putting all the output into a single Data table due to a limitation of using trend tables within Apama Dashboards that only allows one trend table to be created and maintained from any given table.  This causes a problem when trying to display filtered output from a single table.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>None</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>name</b></td><td>The name of the DataView table where the incoming Data event data will be stored</td> <td>A non-empty string</td><td>String</td><td>False</td><td>The input Data name</td></tr> <tr><td><b>owner</b></td><td>The identifier used as the owner of the DataView table that will be created. Defaults to access for all users</td> <td>A non-empty string</td><td>String</td><td>False</td><td><font face=\"courier\" size=\"-1\">*</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a DataViewer Analytic which will create a dataview called \"Input1\" <br>// and publish Data events from the channel \"Input1\" to it.<br>send com.industry.analytics.Analytic(\"DataViewer\", [\"Input1\"], new sequence&ltstring&gt, new dictionary&ltstring,string&gt ) to \"\";<br><br>// Define a DataViewer Analytic which will create a dataview called \"MyDataView\" <br>// and store Data events from the channel \"Input2\" into it.<br>send com.industry.analytics.Analytic(\"DataViewer\", [\"Input2\"], new sequence&ltstring&gt, {\"name\":\"MyDataView\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DATAVIEW_NAME</A> := \"name\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the name of the DataView to create</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >DATAVIEW_OWNERID</A> := \"owner\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the ownerId of the DataView to create</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"DataViewer\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"DATAVIEW_NAME\"></A><H3>DATAVIEW_NAME</H3><PRE>constant string&nbsp;<B>DATAVIEW_NAME := \"name\"</B></PRE>This constant defines the configuration parameter name that specifies the name of the DataView to create<HR><A NAME=\"DATAVIEW_OWNERID\"></A><H3>DATAVIEW_OWNERID</H3><PRE>constant string&nbsp;<B>DATAVIEW_OWNERID := \"owner\"</B></PRE>This constant defines the configuration parameter name that specifies the ownerId of the DataView to create<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"DataViewer\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Utilities",
            "inputChannels": [
                {
                    "description": "The channel which receives data to be displayed in a dataview",
                    "name": "Data"
                }
            ],
            "name": "DataViewer",
            "properties": [
                {
                    "defaultValue": "Input channel name",
                    "description": "This parameter defines the name of the DataView where the incoming Data event data will be stored",
                    "name": "name",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.length > 0 || 'Name must not be blank' }"
                },
                {
                    "advanced": true,
                    "defaultValue": "'*' = Any owner",
                    "description": "The parameter defines the ownerId of the DataView ownerId that is created",
                    "name": "owner",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.length > 0 || 'Owner must not be blank' }"
                }
            ]
        },
        {
            "description": "Caches the input data into a MemoryStore table.",
            "documentation": "<H2><FONT SIZE=\"-1\">com.industry.analytics.utilities</FONT><BR>MemoryStore</H2><HR>The MemoryStore Analytic caches the Data data from the defined input Data channel to a table in MemoryStore named by the provided <font face=\"courier\" size=\"-1\">outputDataName</font>. It also adds an entry in the MemoryStore table for that table name. The Data table is keyed on name and sourceId. This method was chosen over putting all the output into a single Data table due to a limitation of using trend tables within Apama Dashboards that only allows one trend table to be created and maintained from any given table.  This causes a problem when trying to display filtered output from a single table.<br><br> <dl><dt><b>Input Data events:</b></dt> <dd>Only a single input Data stream name must be provided.</dd> </dl> <dl><dt><b>Output Data events:</b></dt> <dd>None</dd> </dl> <dl><dt><b>Params:</b></dt> <dd> <table border=\"1\" style=\"border-collapse: collapse;width:100%\"> <tr><th>Param Name</th><th>Description</th><th>Valid Values</th><th>Data Type</th><th>Required</th><th>Default Value</th></tr> <tr><td><b>name</b></td><td>The name of the MemoryStore table where the incoming Data event data will be stored</td> <td>A non-empty string</td><td>String</td><td>False</td><td>The input Data name</td></tr> <tr><td><b>exposeMemoryView</b></td><td>When this field is true, the MemoryStore makes the rows in the in-memory table associated with this schema available by creating DataViews that contain this data.</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">true</font></td></tr> <tr><td><b>exposePersistentView</b></td><td>When this field is true, the MemoryStore makes the rows in the on-disk table associated with this schema available by creating DataViews that contain this data.</td> <td><font face=\"courier\" size=\"-1\">true</font> or <font face=\"courier\" size=\"-1\">false</font></td><td>Boolean</td><td>False</td><td><font face=\"courier\" size=\"-1\">false</font></td></tr> </table></dd> </dl> <dl><dt><b>Example usage:</b></dt> <dd><pre><br>// Define a MemoryStore Analytic which will create a MemoryStore table <br>// called \"Input1\" and store Data events from the channel \"Input1\" into it.<br>send com.industry.analytics.Analytic(\"MemoryStore\", [\"Input1\"], new sequence&ltstring&gt, new dictionary&ltstring,string&gt ) to \"\";<br><br>// Define a MemoryStore Analytic which will create a MemoryStore table <br>// called \"MyTable\" and store Data events from the channel \"Input2\" into it.<br>send com.industry.analytics.Analytic(\"MemoryStore\", [\"Input2\"], new sequence&ltstring&gt, {\"name\":\"MyTable\"} ) to \"\";<br></pre></dd> </dl><HR><A NAME=\"constant_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Constant Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >EXPOSE_MEMORY_VIEW</A> := \"exposeMemoryView\"</B></CODE><br><br>This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the in-memory tables</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >EXPOSE_PERSISTENT_VIEW</A> := \"exposePersistentView\"</B></CODE><br><br>This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the on-disk tables</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >NAME</A> := \"MemoryStore\"</B></CODE><br><br>This constant defines the name of the Analytic.</TD></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;constant string</CODE></FONT></TD><TD><CODE><B><A >TABLE_NAME</A> := \"name\"</B></CODE><br><br>This constant defines the configuration parameter name that specifies the name of the MemoryStore table to create</TD></TR></TABLE>&nbsp;<A NAME=\"action_summary\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"2\"><FONT SIZE=\"+2\"><B>Action Summary</B></FONT></TH></TR><TR BGCOLOR=\"white\" CLASS=\"TableRowColor\"><TD ALIGN=\"right\" VALIGN=\"top\" WIDTH=\"1%\"><FONT SIZE=\"-1\"><CODE>&nbsp;void</CODE></FONT></TD><TD><CODE></CODE><CODE><B><A >init</A></B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</CODE><br><br>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.</TD></TR></TABLE>&nbsp;<A NAME=\"constant_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Constant Detail</B></FONT></TH></TR></TABLE><A NAME=\"EXPOSE_MEMORY_VIEW\"></A><H3>EXPOSE_MEMORY_VIEW</H3><PRE>constant string&nbsp;<B>EXPOSE_MEMORY_VIEW := \"exposeMemoryView\"</B></PRE>This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the in-memory tables<HR><A NAME=\"EXPOSE_PERSISTENT_VIEW\"></A><H3>EXPOSE_PERSISTENT_VIEW</H3><PRE>constant string&nbsp;<B>EXPOSE_PERSISTENT_VIEW := \"exposePersistentView\"</B></PRE>This constant defines the configuration parameter name that indicates whether the MemoryStore will create dataviews for the on-disk tables<HR><A NAME=\"NAME\"></A><H3>NAME</H3><PRE>constant string&nbsp;<B>NAME := \"MemoryStore\"</B></PRE>This constant defines the name of the Analytic.<HR><A NAME=\"TABLE_NAME\"></A><H3>TABLE_NAME</H3><PRE>constant string&nbsp;<B>TABLE_NAME := \"name\"</B></PRE>This constant defines the configuration parameter name that specifies the name of the MemoryStore table to create<HR><A NAME=\"action_detail\"></A><TABLE BORDER=\"1\" WIDTH=\"100%\" CELLPADDING=\"3\" CELLSPACING=\"0\" SUMMARY=\"\"><TR BGCOLOR=\"#CCCCFF\" CLASS=\"TableHeadingColor\"><TH ALIGN=\"left\" COLSPAN=\"1\"><FONT SIZE=\"+2\"><B>Action Detail</B></FONT></TH></TR></TABLE><A NAME=\"init()\"></A><H3>init</H3><PRE>void&nbsp;<B>init</B>(<A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;config,&nbsp;action&lt;boolean,&nbsp;<A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;&gt;&nbsp;initComplete)</PRE>This action creates a new instance of the Analytic. Typically, this is called internally by the associated Analytics service monitor when a com.industry.analytics.Analytic event is sent for this type of Analytic.<DL><DT><B>Parameters:</B></DT><DD><tt>config</tt>&nbsp;-&nbsp;The Analytic configuration that will be used for this instance</DD><DD><tt>initComplete</tt>&nbsp;-&nbsp;The action callback to call when the new Analytic has been created, or if an error occured.</DD></DL><DL><DT><B>See Also:</B></DT><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.Analytic</A>&nbsp;-&nbsp;The Analytic configuration event object.</DD><DD><A  title=\"type in com.industry.analytics\">com.industry.analytics.AnalyticInterface</A>&nbsp;-&nbsp;The action interface that can be used to interact with the Analytic.</DD></DL>",
            "group": "Utilities",
            "inputChannels": [
                {
                    "description": "The channel which receives the data to be stored",
                    "name": "Data"
                }
            ],
            "name": "MemoryStore",
            "properties": [
                {
                    "defaultValue": "Input channel name",
                    "description": "This name is used as the memory store table name",
                    "name": "name",
                    "optional": true,
                    "type": "string",
                    "validator": "function(value) { return value.length > 0 || 'Name must not be blank' }"
                },
                {
                    "advanced": true,
                    "defaultValue": true,
                    "description": "When this field is true, the MemoryStore makes the rows in the in-memory table associated with this schema available by creating DataViews that contain this data",
                    "name": "exposeMemoryView",
                    "optional": true,
                    "type": "boolean"
                },
                {
                    "advanced": true,
                    "defaultValue": false,
                    "description": "When this field is true, the MemoryStore makes the rows in the on-disk table associated with this schema available by creating DataViews that contain this data",
                    "name": "exposePersistentView",
                    "optional": true,
                    "type": "boolean"
                }
            ]
        }
    ],
    "groupOrder": [
        "Detectors",
        "Flow Manipulators",
        "Streaming Calculations",
        "Utilities",
        "GeoLocation",
        "Extensions"
    ],
    "version": "2.0.0.0"
}
